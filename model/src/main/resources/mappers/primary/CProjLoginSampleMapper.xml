<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.besbing.model.mapper.primary.CProjLoginSampleMapper">
  <resultMap id="BaseResultMap" type="cn.besbing.model.entities.primary.CProjLoginSample">
    <id column="SEQ_NUM" jdbcType="DECIMAL" property="seqNum" />
    <result column="PROJECT" jdbcType="VARCHAR" property="project" />
    <result column="PRODUCT_STANDARD" jdbcType="VARCHAR" property="productStandard" />
    <result column="PRODNAME" jdbcType="VARCHAR" property="prodname" />
    <result column="PRODUCTION_SPEC" jdbcType="VARCHAR" property="productionSpec" />
    <result column="STRUCTURE_TYPE" jdbcType="VARCHAR" property="structureType" />
    <result column="CONTACT_TYPE" jdbcType="VARCHAR" property="contactType" />
    <result column="SAMPLE_GROUP" jdbcType="VARCHAR" property="sampleGroup" />
    <result column="SAMPLE_QUANTITY" jdbcType="DECIMAL" property="sampleQuantity" />
    <result column="NEED_LIST" jdbcType="VARCHAR" property="needList" />
    <result column="INSULATION_LEVEL" jdbcType="VARCHAR" property="insulationLevel" />
    <result column="HAS_LOGINED_SAMPLE" jdbcType="VARCHAR" property="hasLoginedSample" />
    <result column="MANUFACTURER" jdbcType="VARCHAR" property="manufacturer" />
    <result column="OTHER_REQ" jdbcType="VARCHAR" property="otherReq" />
    <result column="PRODUCT_STAGE" jdbcType="VARCHAR" property="productStage" />
    <result column="PRODUCT_SERIES" jdbcType="VARCHAR" property="productSeries" />
    <result column="CONTACT_BRAND" jdbcType="VARCHAR" property="contactBrand" />
    <result column="CONTACT_MODEL" jdbcType="VARCHAR" property="contactModel" />
    <result column="EN_MANUFACTURER" jdbcType="VARCHAR" property="enManufacturer" />
    <result column="EN_OTHER_REQ" jdbcType="VARCHAR" property="enOtherReq" />
    <result column="TS" jdbcType="CHAR" property="ts" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    SEQ_NUM, PROJECT, PRODUCT_STANDARD, PRODNAME, PRODUCTION_SPEC, STRUCTURE_TYPE, CONTACT_TYPE, 
    SAMPLE_GROUP, SAMPLE_QUANTITY, NEED_LIST, INSULATION_LEVEL, HAS_LOGINED_SAMPLE, MANUFACTURER, 
    OTHER_REQ, PRODUCT_STAGE, PRODUCT_SERIES, CONTACT_BRAND, CONTACT_MODEL, EN_MANUFACTURER, 
    EN_OTHER_REQ, TS
  </sql>
  <select id="selectByExample" parameterType="cn.besbing.model.entities.primary.CProjLoginSampleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from C_PROJ_LOGIN_SAMPLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from C_PROJ_LOGIN_SAMPLE
    where SEQ_NUM = #{seqNum,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    delete from C_PROJ_LOGIN_SAMPLE
    where SEQ_NUM = #{seqNum,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="cn.besbing.model.entities.primary.CProjLoginSampleExample">
    delete from C_PROJ_LOGIN_SAMPLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.besbing.model.entities.primary.CProjLoginSample">
    insert into C_PROJ_LOGIN_SAMPLE (SEQ_NUM, PROJECT, PRODUCT_STANDARD, 
      PRODNAME, PRODUCTION_SPEC, STRUCTURE_TYPE, 
      CONTACT_TYPE, SAMPLE_GROUP, SAMPLE_QUANTITY, 
      NEED_LIST, INSULATION_LEVEL, HAS_LOGINED_SAMPLE, 
      MANUFACTURER, OTHER_REQ, PRODUCT_STAGE, 
      PRODUCT_SERIES, CONTACT_BRAND, CONTACT_MODEL, 
      EN_MANUFACTURER, EN_OTHER_REQ, TS
      )
    values (#{seqNum,jdbcType=DECIMAL}, #{project,jdbcType=VARCHAR}, #{productStandard,jdbcType=VARCHAR}, 
      #{prodname,jdbcType=VARCHAR}, #{productionSpec,jdbcType=VARCHAR}, #{structureType,jdbcType=VARCHAR}, 
      #{contactType,jdbcType=VARCHAR}, #{sampleGroup,jdbcType=VARCHAR}, #{sampleQuantity,jdbcType=DECIMAL}, 
      #{needList,jdbcType=VARCHAR}, #{insulationLevel,jdbcType=VARCHAR}, #{hasLoginedSample,jdbcType=VARCHAR}, 
      #{manufacturer,jdbcType=VARCHAR}, #{otherReq,jdbcType=VARCHAR}, #{productStage,jdbcType=VARCHAR}, 
      #{productSeries,jdbcType=VARCHAR}, #{contactBrand,jdbcType=VARCHAR}, #{contactModel,jdbcType=VARCHAR}, 
      #{enManufacturer,jdbcType=VARCHAR}, #{enOtherReq,jdbcType=VARCHAR}, #{ts,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.besbing.model.entities.primary.CProjLoginSample">
    insert into C_PROJ_LOGIN_SAMPLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seqNum != null">
        SEQ_NUM,
      </if>
      <if test="project != null">
        PROJECT,
      </if>
      <if test="productStandard != null">
        PRODUCT_STANDARD,
      </if>
      <if test="prodname != null">
        PRODNAME,
      </if>
      <if test="productionSpec != null">
        PRODUCTION_SPEC,
      </if>
      <if test="structureType != null">
        STRUCTURE_TYPE,
      </if>
      <if test="contactType != null">
        CONTACT_TYPE,
      </if>
      <if test="sampleGroup != null">
        SAMPLE_GROUP,
      </if>
      <if test="sampleQuantity != null">
        SAMPLE_QUANTITY,
      </if>
      <if test="needList != null">
        NEED_LIST,
      </if>
      <if test="insulationLevel != null">
        INSULATION_LEVEL,
      </if>
      <if test="hasLoginedSample != null">
        HAS_LOGINED_SAMPLE,
      </if>
      <if test="manufacturer != null">
        MANUFACTURER,
      </if>
      <if test="otherReq != null">
        OTHER_REQ,
      </if>
      <if test="productStage != null">
        PRODUCT_STAGE,
      </if>
      <if test="productSeries != null">
        PRODUCT_SERIES,
      </if>
      <if test="contactBrand != null">
        CONTACT_BRAND,
      </if>
      <if test="contactModel != null">
        CONTACT_MODEL,
      </if>
      <if test="enManufacturer != null">
        EN_MANUFACTURER,
      </if>
      <if test="enOtherReq != null">
        EN_OTHER_REQ,
      </if>
      <if test="ts != null">
        TS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seqNum != null">
        #{seqNum,jdbcType=DECIMAL},
      </if>
      <if test="project != null">
        #{project,jdbcType=VARCHAR},
      </if>
      <if test="productStandard != null">
        #{productStandard,jdbcType=VARCHAR},
      </if>
      <if test="prodname != null">
        #{prodname,jdbcType=VARCHAR},
      </if>
      <if test="productionSpec != null">
        #{productionSpec,jdbcType=VARCHAR},
      </if>
      <if test="structureType != null">
        #{structureType,jdbcType=VARCHAR},
      </if>
      <if test="contactType != null">
        #{contactType,jdbcType=VARCHAR},
      </if>
      <if test="sampleGroup != null">
        #{sampleGroup,jdbcType=VARCHAR},
      </if>
      <if test="sampleQuantity != null">
        #{sampleQuantity,jdbcType=DECIMAL},
      </if>
      <if test="needList != null">
        #{needList,jdbcType=VARCHAR},
      </if>
      <if test="insulationLevel != null">
        #{insulationLevel,jdbcType=VARCHAR},
      </if>
      <if test="hasLoginedSample != null">
        #{hasLoginedSample,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="otherReq != null">
        #{otherReq,jdbcType=VARCHAR},
      </if>
      <if test="productStage != null">
        #{productStage,jdbcType=VARCHAR},
      </if>
      <if test="productSeries != null">
        #{productSeries,jdbcType=VARCHAR},
      </if>
      <if test="contactBrand != null">
        #{contactBrand,jdbcType=VARCHAR},
      </if>
      <if test="contactModel != null">
        #{contactModel,jdbcType=VARCHAR},
      </if>
      <if test="enManufacturer != null">
        #{enManufacturer,jdbcType=VARCHAR},
      </if>
      <if test="enOtherReq != null">
        #{enOtherReq,jdbcType=VARCHAR},
      </if>
      <if test="ts != null">
        #{ts,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.besbing.model.entities.primary.CProjLoginSampleExample" resultType="java.lang.Long">
    select count(*) from C_PROJ_LOGIN_SAMPLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectProject" resultMap="BaseResultMap" parameterType="cn.besbing.model.utils.SearchDTO">

      select *
      from c_proj_login_sample where 1=1
      <if test="_parameter != null">
        and project like '%'||#{_parameter}||'%'
      </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update C_PROJ_LOGIN_SAMPLE
    <set>
      <if test="record.seqNum != null">
        SEQ_NUM = #{record.seqNum,jdbcType=DECIMAL},
      </if>
      <if test="record.project != null">
        PROJECT = #{record.project,jdbcType=VARCHAR},
      </if>
      <if test="record.productStandard != null">
        PRODUCT_STANDARD = #{record.productStandard,jdbcType=VARCHAR},
      </if>
      <if test="record.prodname != null">
        PRODNAME = #{record.prodname,jdbcType=VARCHAR},
      </if>
      <if test="record.productionSpec != null">
        PRODUCTION_SPEC = #{record.productionSpec,jdbcType=VARCHAR},
      </if>
      <if test="record.structureType != null">
        STRUCTURE_TYPE = #{record.structureType,jdbcType=VARCHAR},
      </if>
      <if test="record.contactType != null">
        CONTACT_TYPE = #{record.contactType,jdbcType=VARCHAR},
      </if>
      <if test="record.sampleGroup != null">
        SAMPLE_GROUP = #{record.sampleGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.sampleQuantity != null">
        SAMPLE_QUANTITY = #{record.sampleQuantity,jdbcType=DECIMAL},
      </if>
      <if test="record.needList != null">
        NEED_LIST = #{record.needList,jdbcType=VARCHAR},
      </if>
      <if test="record.insulationLevel != null">
        INSULATION_LEVEL = #{record.insulationLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.hasLoginedSample != null">
        HAS_LOGINED_SAMPLE = #{record.hasLoginedSample,jdbcType=VARCHAR},
      </if>
      <if test="record.manufacturer != null">
        MANUFACTURER = #{record.manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.otherReq != null">
        OTHER_REQ = #{record.otherReq,jdbcType=VARCHAR},
      </if>
      <if test="record.productStage != null">
        PRODUCT_STAGE = #{record.productStage,jdbcType=VARCHAR},
      </if>
      <if test="record.productSeries != null">
        PRODUCT_SERIES = #{record.productSeries,jdbcType=VARCHAR},
      </if>
      <if test="record.contactBrand != null">
        CONTACT_BRAND = #{record.contactBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.contactModel != null">
        CONTACT_MODEL = #{record.contactModel,jdbcType=VARCHAR},
      </if>
      <if test="record.enManufacturer != null">
        EN_MANUFACTURER = #{record.enManufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.enOtherReq != null">
        EN_OTHER_REQ = #{record.enOtherReq,jdbcType=VARCHAR},
      </if>
      <if test="record.ts != null">
        TS = #{record.ts,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update C_PROJ_LOGIN_SAMPLE
    set SEQ_NUM = #{record.seqNum,jdbcType=DECIMAL},
      PROJECT = #{record.project,jdbcType=VARCHAR},
      PRODUCT_STANDARD = #{record.productStandard,jdbcType=VARCHAR},
      PRODNAME = #{record.prodname,jdbcType=VARCHAR},
      PRODUCTION_SPEC = #{record.productionSpec,jdbcType=VARCHAR},
      STRUCTURE_TYPE = #{record.structureType,jdbcType=VARCHAR},
      CONTACT_TYPE = #{record.contactType,jdbcType=VARCHAR},
      SAMPLE_GROUP = #{record.sampleGroup,jdbcType=VARCHAR},
      SAMPLE_QUANTITY = #{record.sampleQuantity,jdbcType=DECIMAL},
      NEED_LIST = #{record.needList,jdbcType=VARCHAR},
      INSULATION_LEVEL = #{record.insulationLevel,jdbcType=VARCHAR},
      HAS_LOGINED_SAMPLE = #{record.hasLoginedSample,jdbcType=VARCHAR},
      MANUFACTURER = #{record.manufacturer,jdbcType=VARCHAR},
      OTHER_REQ = #{record.otherReq,jdbcType=VARCHAR},
      PRODUCT_STAGE = #{record.productStage,jdbcType=VARCHAR},
      PRODUCT_SERIES = #{record.productSeries,jdbcType=VARCHAR},
      CONTACT_BRAND = #{record.contactBrand,jdbcType=VARCHAR},
      CONTACT_MODEL = #{record.contactModel,jdbcType=VARCHAR},
      EN_MANUFACTURER = #{record.enManufacturer,jdbcType=VARCHAR},
      EN_OTHER_REQ = #{record.enOtherReq,jdbcType=VARCHAR},
      TS = #{record.ts,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.besbing.model.entities.primary.CProjLoginSample">
    update C_PROJ_LOGIN_SAMPLE
    <set>
      <if test="project != null">
        PROJECT = #{project,jdbcType=VARCHAR},
      </if>
      <if test="productStandard != null">
        PRODUCT_STANDARD = #{productStandard,jdbcType=VARCHAR},
      </if>
      <if test="prodname != null">
        PRODNAME = #{prodname,jdbcType=VARCHAR},
      </if>
      <if test="productionSpec != null">
        PRODUCTION_SPEC = #{productionSpec,jdbcType=VARCHAR},
      </if>
      <if test="structureType != null">
        STRUCTURE_TYPE = #{structureType,jdbcType=VARCHAR},
      </if>
      <if test="contactType != null">
        CONTACT_TYPE = #{contactType,jdbcType=VARCHAR},
      </if>
      <if test="sampleGroup != null">
        SAMPLE_GROUP = #{sampleGroup,jdbcType=VARCHAR},
      </if>
      <if test="sampleQuantity != null">
        SAMPLE_QUANTITY = #{sampleQuantity,jdbcType=DECIMAL},
      </if>
      <if test="needList != null">
        NEED_LIST = #{needList,jdbcType=VARCHAR},
      </if>
      <if test="insulationLevel != null">
        INSULATION_LEVEL = #{insulationLevel,jdbcType=VARCHAR},
      </if>
      <if test="hasLoginedSample != null">
        HAS_LOGINED_SAMPLE = #{hasLoginedSample,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        MANUFACTURER = #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="otherReq != null">
        OTHER_REQ = #{otherReq,jdbcType=VARCHAR},
      </if>
      <if test="productStage != null">
        PRODUCT_STAGE = #{productStage,jdbcType=VARCHAR},
      </if>
      <if test="productSeries != null">
        PRODUCT_SERIES = #{productSeries,jdbcType=VARCHAR},
      </if>
      <if test="contactBrand != null">
        CONTACT_BRAND = #{contactBrand,jdbcType=VARCHAR},
      </if>
      <if test="contactModel != null">
        CONTACT_MODEL = #{contactModel,jdbcType=VARCHAR},
      </if>
      <if test="enManufacturer != null">
        EN_MANUFACTURER = #{enManufacturer,jdbcType=VARCHAR},
      </if>
      <if test="enOtherReq != null">
        EN_OTHER_REQ = #{enOtherReq,jdbcType=VARCHAR},
      </if>
      <if test="ts != null">
        TS = #{ts,jdbcType=CHAR},
      </if>
    </set>
    where SEQ_NUM = #{seqNum,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.besbing.model.entities.primary.CProjLoginSample">
    update C_PROJ_LOGIN_SAMPLE
    set PROJECT = #{project,jdbcType=VARCHAR},
      PRODUCT_STANDARD = #{productStandard,jdbcType=VARCHAR},
      PRODNAME = #{prodname,jdbcType=VARCHAR},
      PRODUCTION_SPEC = #{productionSpec,jdbcType=VARCHAR},
      STRUCTURE_TYPE = #{structureType,jdbcType=VARCHAR},
      CONTACT_TYPE = #{contactType,jdbcType=VARCHAR},
      SAMPLE_GROUP = #{sampleGroup,jdbcType=VARCHAR},
      SAMPLE_QUANTITY = #{sampleQuantity,jdbcType=DECIMAL},
      NEED_LIST = #{needList,jdbcType=VARCHAR},
      INSULATION_LEVEL = #{insulationLevel,jdbcType=VARCHAR},
      HAS_LOGINED_SAMPLE = #{hasLoginedSample,jdbcType=VARCHAR},
      MANUFACTURER = #{manufacturer,jdbcType=VARCHAR},
      OTHER_REQ = #{otherReq,jdbcType=VARCHAR},
      PRODUCT_STAGE = #{productStage,jdbcType=VARCHAR},
      PRODUCT_SERIES = #{productSeries,jdbcType=VARCHAR},
      CONTACT_BRAND = #{contactBrand,jdbcType=VARCHAR},
      CONTACT_MODEL = #{contactModel,jdbcType=VARCHAR},
      EN_MANUFACTURER = #{enManufacturer,jdbcType=VARCHAR},
      EN_OTHER_REQ = #{enOtherReq,jdbcType=VARCHAR},
      TS = #{ts,jdbcType=CHAR}
    where SEQ_NUM = #{seqNum,jdbcType=DECIMAL}
  </update>
</mapper>