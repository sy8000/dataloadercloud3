[2020-10-26 13:34:04] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 13:34:06] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 13:34:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 13:34:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 13:34:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 13:34:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 13:34:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 13:34:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 13:34:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 13:34:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 13:34:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 13:34:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 13:34:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 13:34:09] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 13:34:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 13:34:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3e9beef2
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 13:34:09] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 13:34:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 13:34:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 13:34:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 13:34:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 13:34:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 13:34:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 13:58:01] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 13:58:01] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@70da530f
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@464fb757
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1e376c3f
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 13:58:01] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 13:58:08] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 13:58:08] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 13:58:08] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 13:58:08] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 13:58:08] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 13:58:08] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 13:58:08] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 13:58:08] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 13:58:08] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 05:58:08 GMT]
[2020-10-26 13:58:08] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 13:59:00] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 13:59:00] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 13:59:00] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 13:59:09] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 13:59:10] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 13:59:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 13:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 13:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 13:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 13:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 13:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 13:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 13:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 13:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 13:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 13:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 13:59:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 13:59:12] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 13:59:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 13:59:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@33d230ce
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 13:59:12] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 13:59:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 13:59:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 13:59:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 13:59:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 13:59:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 13:59:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 13:59:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 13:59:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@43f1359f
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@115c3f4
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@352cccbe
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 13:59:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 13:59:23] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 13:59:23] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 13:59:23] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 13:59:23] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 13:59:23] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 13:59:23] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 13:59:23] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 13:59:23] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 13:59:23] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 05:59:23 GMT]
[2020-10-26 13:59:23] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:00:04] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:00:04] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:00:04] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:00:04] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:00:04] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:00:04] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:00:04] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:00:04] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:00:04] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:00:04 GMT]
[2020-10-26 14:00:04] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:02:09] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:02:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:02:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:02:16] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:02:17] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:02:17] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:02:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:02:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:02:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:02:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:02:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:02:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:02:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:02:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:02:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:02:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:02:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:02:19] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:02:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:02:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@737db7f8
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:02:19] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:02:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:02:19] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:02:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:02:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:02:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:02:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:02:23] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:02:23] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@34455f61
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7236201c
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@c0b0d27
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:02:23] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:02:29] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:02:29] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:02:29] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:02:29] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:02:29] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:02:29] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:02:29] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:02:29] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:02:29] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:02:29 GMT]
[2020-10-26 14:02:29] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:03:22] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:03:22] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:03:22] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:03:22] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:03:22] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:03:22] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:03:22] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:03:22] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:03:22] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:03:22 GMT]
[2020-10-26 14:03:22] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:06:27] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:06:28] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:06:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:06:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:06:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:06:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:06:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:06:29] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:06:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:06:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@656922a0
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:06:30] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:06:30] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:06:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:06:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:06:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:06:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:06:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:06:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:06:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7059abf7
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@cbf4d80
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7682b9af
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:06:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:06:45] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:06:45] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:06:45] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:06:45] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:06:45] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:06:45] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:06:45] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:06:45] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:06:45] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:06:45 GMT]
[2020-10-26 14:06:45] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:08:17] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:08:18] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:08:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:08:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:08:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:08:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:08:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:08:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:08:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:08:19] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:08:20] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:08:20] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@b506ed0
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:08:20] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:08:20] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:08:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:08:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:08:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:08:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:08:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:08:26] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:08:26] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2faf1084
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@f7b4437
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@79f02d69
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:08:26] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:08:32] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:08:32] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:08:32] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:08:32] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:08:32] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:08:32] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:08:32] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:08:32] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:08:32] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:08:32 GMT]
[2020-10-26 14:08:32] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:09:06] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:09:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:09:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:09:11] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:09:12] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:09:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:09:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:09:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:09:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:09:13] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:09:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:09:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2440022a
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:09:14] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:09:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:09:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:09:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:09:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:09:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:09:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:09:19] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:09:19] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@140226ef
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@225ea6a5
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@71301f30
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:09:19] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:09:25] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:09:25] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:09:25] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:09:25] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:09:25] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:09:25] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:09:25] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:09:25] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:09:25] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:09:25 GMT]
[2020-10-26 14:09:25] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:10:06] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:10:07] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:10:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:10:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:10:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:10:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:10:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:10:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:10:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:10:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:10:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:10:08] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:10:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:10:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4466cf5d
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:10:09] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:10:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:10:09] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:10:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:10:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:10:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:10:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:10:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:10:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@57c7df06
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@83d769e
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@572fadd5
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:10:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:10:20] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:10:20] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:10:20] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:10:20] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:10:20] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:10:20] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:10:20] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:10:20] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:10:20] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:10:20 GMT]
[2020-10-26 14:10:20] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:15:37] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:15:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:15:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:15:41] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:15:42] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:15:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:15:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:15:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:15:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:15:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:15:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:15:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:15:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:15:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:15:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:15:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:15:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:15:44] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:15:44] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:15:44] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@47406941
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:15:44] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:15:44] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:15:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:15:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:15:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:15:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:15:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:15:51] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:15:51] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5c0f7abc
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4f08f7bf
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@59b404a1
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:15:51] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:15:56] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:15:56] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:15:56] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:15:56] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:15:56] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:15:56] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:15:56] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:15:56] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:15:56] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:15:56 GMT]
[2020-10-26 14:15:56] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:17:10] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:17:11] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:17:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:17:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:17:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:17:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:17:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:17:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:17:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:17:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:17:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:17:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:17:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:17:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:17:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:17:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:17:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2538bc06
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:17:13] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:17:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:17:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:17:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:17:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:17:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:17:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:17:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:17:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@15e6a279
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5cca6284
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6ea280d0
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:17:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:17:23] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:17:23] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:17:23] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:17:23] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:17:23] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:17:23] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:17:23] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:17:23] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:17:23] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:17:23 GMT]
[2020-10-26 14:17:23] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:18:52] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:18:52] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:18:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:18:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:18:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:18:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:18:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:18:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:18:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:18:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:18:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:18:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:18:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:18:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:18:54] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:18:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:18:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@29fa6b65
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:18:54] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:18:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:18:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:18:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:18:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:18:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:18:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:19:02] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:19:02] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3af380b6
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@99b83fa
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@46d782c4
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:19:02] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:19:10] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:19:10] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:19:10] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:19:10] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:19:10] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:19:10] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:19:10] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:19:10] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:19:10] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:19:10 GMT]
[2020-10-26 14:19:10] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:21:03] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:21:04] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:21:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:21:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:21:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:21:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:21:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:21:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:21:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:21:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:21:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:21:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:21:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:21:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:21:06] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:21:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:21:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7159d601
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:21:06] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:21:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:21:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:21:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:21:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:21:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:21:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:22:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:22:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3794e449
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@40014ed4
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1ecc7764
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:22:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:22:28] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:22:28] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:22:28] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:22:28] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:22:28] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:22:28] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:22:28] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:22:28] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:22:28] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:22:28 GMT]
[2020-10-26 14:22:28] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:23:38] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:23:38] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:23:38] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:23:44] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:23:46] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:23:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:23:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:23:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:23:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:23:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:23:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:23:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:23:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:23:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:23:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:23:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:23:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:23:48] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:23:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:23:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6015a4a5
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:23:48] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:23:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:23:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:23:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:23:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:23:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:23:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:24:11] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:24:12] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:24:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:24:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:24:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:24:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:24:13] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:24:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:24:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2538bc06
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:24:14] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:24:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:24:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:24:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:24:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:24:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:24:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:24:20] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:24:20] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2a292b5a
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7293fc3e
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@536c3be
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:24:20] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:24:28] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:24:28] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:24:28] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:24:28] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:24:28] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:24:28] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:24:28] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:24:28] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:24:28] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:24:28 GMT]
[2020-10-26 14:24:28] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:25:30] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:25:31] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:25:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:25:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:25:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:25:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:25:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:25:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:25:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:25:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:25:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:25:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:25:32] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:25:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:25:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4d7cac24
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:25:33] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:25:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:25:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:25:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:25:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:25:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:25:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:25:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:25:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2a5e32e5
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@354db2a0
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1571ef60
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:25:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:25:44] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:25:44] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:25:44] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:25:44] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:25:44] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:25:44] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:25:44] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:25:44] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:25:44] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:25:44 GMT]
[2020-10-26 14:25:44] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:29:23] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:29:23] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:29:23] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:29:29] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:29:30] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:29:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:29:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:29:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:29:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:29:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:29:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:29:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:29:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:29:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:29:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:29:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:29:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:29:32] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:29:32] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:29:32] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@61f6d381
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:29:32] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:29:32] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:29:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:29:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:29:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:29:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:29:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:39:52] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:39:52] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@1ebf56b7
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5eb735d3
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1107ce6
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:39:52] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:39:58] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:39:58] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:39:58] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:39:58] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:39:58] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:39:58] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:39:58] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:39:58] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:39:58] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:39:58 GMT]
[2020-10-26 14:39:58] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:40:46] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:40:47] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:40:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:40:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:40:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:40:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:40:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:40:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:40:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:40:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:40:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:40:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:40:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:40:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:40:49] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:40:50] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:40:50] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@b506ed0
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:40:50] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:40:50] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:40:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:40:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:40:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:40:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:40:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:40:56] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:40:56] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@400a458b
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@21063364
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@698d7897
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:40:56] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:41:01] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:41:01] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:41:01] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:41:01] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:41:01] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:41:01] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:41:01] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:41:01] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:41:01] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:41:01 GMT]
[2020-10-26 14:41:01] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:44:24] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:44:24] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:44:24] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:44:29] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:44:30] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:44:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:44:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:44:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:44:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:44:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:44:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:44:31] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:44:32] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:44:32] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@737db7f8
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:44:32] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:44:32] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:44:32] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:44:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:44:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:44:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:44:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:44:37] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:44:37] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@42fce612
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7c97edee
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3ed2002
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:44:37] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:44:43] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:44:43] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:44:43] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:44:43] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:44:43] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:44:43] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:44:43] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:44:43] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:44:43] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:44:43 GMT]
[2020-10-26 14:44:43] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:45:08] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:45:09] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:45:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:45:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:45:11] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:45:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:45:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6f96dd64
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:45:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:45:11] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:45:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:45:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:45:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:45:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:45:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:45:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:45:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:45:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:45:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:45:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:45:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:45:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:45:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:45:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:45:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:45:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:45:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:45:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:45:22] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7c32d5f
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@23fd3ea
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@62197e47
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:45:22] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:45:26] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:45:26] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:45:26] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:45:26] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:45:26] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:45:26] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:45:26] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:45:26] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:45:26] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:45:26 GMT]
[2020-10-26 14:45:26] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:47:12] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:47:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:47:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:47:17] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:47:18] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:47:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:47:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:47:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:47:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:47:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:47:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:47:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:47:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:47:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:47:19] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:47:20] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:47:20] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2538bc06
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:47:20] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:47:20] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:47:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:47:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:47:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:47:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:47:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:47:25] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:47:25] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@34455f61
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7236201c
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@c0b0d27
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:47:25] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:47:31] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [null] from doGetAuthenticationInfo
[2020-10-26 14:47:31] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- No AuthenticationInfo found for submitted AuthenticationToken [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returning null.
[2020-10-26 14:47:31] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:47:31 GMT]
[2020-10-26 14:47:44] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:47:45] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:47:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:47:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:47:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:47:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:47:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:47:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:47:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:47:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:47:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:47:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:47:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:47:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:47:47] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:47:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:47:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@a316f6b
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:47:48] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:47:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:47:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:47:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:47:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:47:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:47:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:47:58] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:47:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@b3485ff
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6b2423f0
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@460b27e1
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:47:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:48:04] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:48:04] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:48:04] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:48:04] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:48:04] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:48:04] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:48:04] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:48:04] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:48:04 GMT]
[2020-10-26 14:48:04] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:52:36] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:52:36] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:52:36] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:52:40] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:52:42] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:52:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:52:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:52:43] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:52:43] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:52:43] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@35e26d05
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:52:43] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:52:44] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:52:44] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:52:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:52:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:52:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:52:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:52:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:52:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:52:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:52:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:52:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:52:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:52:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:52:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:52:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:52:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:52:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:52:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:52:52] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:52:53] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:52:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:52:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:52:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:52:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:52:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:52:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:52:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:52:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:52:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:52:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:52:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:52:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:52:55] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:52:55] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:52:55] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7159d601
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:52:55] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:52:55] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:52:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:52:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:52:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:52:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:52:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:53:00] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:53:00] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@61720e8e
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@93c39e4
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@22a72637
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:53:00] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:53:06] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:53:06] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:53:06] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:53:06] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:53:06] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:53:06] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:53:06] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:53:06] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:53:06] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:53:06 GMT]
[2020-10-26 14:53:06] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:53:54] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:53:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:53:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:53:59] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:54:00] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:54:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:54:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:54:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:54:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:54:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:54:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:54:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:54:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:54:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:54:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:54:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:54:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:54:02] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:54:02] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:54:02] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1c74d19
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:54:02] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:54:02] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:54:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:54:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:54:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:54:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:54:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:54:07] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:54:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:54:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:54:26] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:54:27] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:54:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:54:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:54:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:54:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@478967eb
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:54:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:54:29] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:54:30] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:54:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:54:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:54:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:54:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:54:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:54:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:54:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:54:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:54:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:54:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:54:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:54:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:54:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:54:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:54:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:54:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:54:33] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:54:34] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3794e449
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@40014ed4
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1ecc7764
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:54:34] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:54:39] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:54:39] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:54:39] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:54:39] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:54:39] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:54:39] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:54:39] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:54:39] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:54:39] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:54:39 GMT]
[2020-10-26 14:54:39] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:55:34] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:55:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:55:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:55:40] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:55:41] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:55:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:55:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:55:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:55:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:55:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:55:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:55:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:55:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:55:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:55:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:55:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:55:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:55:43] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:55:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:55:43] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:55:44] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:55:44] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:55:44] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:55:44] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@61ab89b0
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:55:44] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:55:44] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:55:44] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:55:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:55:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:55:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:55:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:55:45] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:55:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:55:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:55:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:55:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:55:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:55:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:55:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:55:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:55:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:55:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:55:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:55:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:55:47] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:55:47] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:55:47] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@527937d0
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:55:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:55:47] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:55:47] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:55:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:55:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:55:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:55:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:55:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:55:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:55:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:55:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:55:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:55:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:55:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:55:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:55:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:55:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:55:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:55:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:55:49] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:55:49] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:55:49] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:56:01] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:56:02] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:56:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:56:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:56:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:56:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:56:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:56:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:56:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:56:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:56:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:56:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:56:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:56:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:56:04] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:56:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:56:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7a572ea0
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:56:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:56:04] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:56:05] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:56:05] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:56:05] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:56:05] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:56:05] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:56:05] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:56:05] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:56:05] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:56:05] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:56:05] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:56:05] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:56:05] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:56:05] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:56:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:56:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:56:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:56:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:56:10] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:56:10] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@400a458b
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@21063364
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@698d7897
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:56:10] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:56:15] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:56:15] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:56:15] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:56:15] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:56:15] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:56:15] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:56:15] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:56:15] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:56:15] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:56:15 GMT]
[2020-10-26 14:56:15] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 14:57:25] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 14:57:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:57:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 14:57:29] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:57:33] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 14:57:34] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 14:57:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 14:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 14:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 14:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 14:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 14:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 14:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 14:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 14:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 14:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 14:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 14:57:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 14:57:36] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 14:57:36] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 14:57:36] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4d7cac24
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 14:57:36] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 14:57:36] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 14:57:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 14:57:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:57:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 14:57:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 14:57:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 14:57:42] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 14:57:42] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5521b186
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@c500a04
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@76bc838c
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 14:57:42] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 14:57:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 14:57:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 14:57:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 14:57:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 14:57:50] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 14:57:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:57:50] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 14:57:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 14:57:50] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 06:57:50 GMT]
[2020-10-26 14:57:50] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 15:01:56] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 15:01:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:01:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:02:01] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 15:02:02] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 15:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 15:02:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 15:02:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 15:02:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 15:02:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 15:02:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 15:02:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 15:02:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@130a6eb9
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 15:02:04] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 15:02:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 15:02:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 15:02:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:02:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 15:02:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:02:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 15:02:07] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 15:02:08] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@28ddbcf3
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@c8d826
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@330222d
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 15:02:08] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 15:02:14] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 15:02:14] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 15:02:14] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 15:02:14] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 15:02:14] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 15:02:14] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:02:14] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 15:02:14] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:02:14] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 07:02:14 GMT]
[2020-10-26 15:02:14] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 15:04:50] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 15:04:50] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:04:50] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:04:55] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 15:04:56] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 15:04:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 15:04:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 15:04:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 15:04:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 15:04:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 15:04:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 15:04:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 15:04:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 15:04:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 15:04:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 15:04:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 15:04:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 15:04:59] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 15:05:00] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 15:05:00] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 15:05:00] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5478ce1e
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 15:05:00] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 15:05:00] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 15:05:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 15:05:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:05:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 15:05:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:05:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 15:05:01] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 15:05:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 15:05:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 15:05:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 15:05:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 15:05:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 15:05:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 15:05:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 15:05:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 15:05:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 15:05:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 15:05:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 15:05:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 15:05:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 15:05:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7ac058a0
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 15:05:04] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 15:05:04] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 15:05:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 15:05:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:05:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 15:05:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:05:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 15:05:05] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 15:05:05] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:05:05] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:05:13] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 15:05:14] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 15:05:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 15:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 15:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 15:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 15:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 15:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 15:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 15:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 15:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 15:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 15:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 15:05:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 15:05:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 15:05:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 15:05:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7ea71fc2
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 15:05:16] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 15:05:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 15:05:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 15:05:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:05:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 15:05:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:05:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 15:05:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 15:05:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@25a6179b
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5407a9a8
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3c941f92
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 15:05:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 15:05:28] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 15:05:28] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 15:05:28] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 15:05:28] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 15:05:28] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 15:05:28] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:05:28] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 15:05:28] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:05:28] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 07:05:28 GMT]
[2020-10-26 15:05:28] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 15:18:24] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 15:18:24] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:18:24] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:18:34] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 15:18:35] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 15:18:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 15:18:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 15:18:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 15:18:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 15:18:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 15:18:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 15:18:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 15:18:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 15:18:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 15:18:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 15:18:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 15:18:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 15:18:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 15:18:37] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 15:18:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 15:18:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2aa5bd48
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 15:18:37] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 15:18:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 15:18:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 15:18:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:18:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 15:18:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:18:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 15:19:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 15:19:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4ba9d8a3
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6db27d42
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@21155006
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 15:19:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 15:19:45] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 15:19:45] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 15:19:45] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 15:19:45] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 15:19:45] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 15:19:45] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:19:45] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 15:19:45] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:19:45] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 07:19:45 GMT]
[2020-10-26 15:19:45] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 15:21:59] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 15:21:59] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:21:59] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:22:08] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 15:22:09] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 15:22:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 15:22:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 15:22:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 15:22:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 15:22:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 15:22:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 15:22:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 15:22:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 15:22:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 15:22:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 15:22:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 15:22:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 15:22:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 15:22:11] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 15:22:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 15:22:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@649b5891
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 15:22:11] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 15:22:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 15:22:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 15:22:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:22:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 15:22:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:22:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 15:23:30] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 15:23:30] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@b3802a1
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7223102f
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@44272525
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 15:23:30] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 15:23:36] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 15:23:36] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 15:23:36] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 15:23:36] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 15:23:36] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 15:23:36] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:23:36] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 15:23:36] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:23:36] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 07:23:36 GMT]
[2020-10-26 15:23:36] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 15:24:25] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 15:24:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:24:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:24:30] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 15:24:31] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 15:24:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 15:24:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 15:24:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 15:24:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 15:24:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 15:24:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 15:24:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 15:24:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 15:24:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 15:24:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 15:24:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 15:24:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 15:24:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 15:24:33] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 15:24:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 15:24:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@200d1a3d
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 15:24:34] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 15:24:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 15:24:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 15:24:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:24:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 15:24:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:24:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 15:25:48] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 15:25:48] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@640f05e3
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6d64607d
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4b5082
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 15:25:48] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 15:25:59] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 15:25:59] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 15:25:59] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 15:25:59] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 15:25:59] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 15:25:59] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:25:59] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 15:25:59] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:25:59] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 07:25:59 GMT]
[2020-10-26 15:25:59] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 15:30:58] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 15:30:58] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:30:58] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:31:05] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 15:31:06] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 15:31:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 15:31:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 15:31:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 15:31:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 15:31:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 15:31:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 15:31:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 15:31:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 15:31:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 15:31:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 15:31:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 15:31:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 15:31:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 15:31:08] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 15:31:08] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 15:31:08] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@29170a47
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 15:31:08] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 15:31:08] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 15:31:08] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 15:31:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:31:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 15:31:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:31:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 15:31:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 15:31:18] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@256d83ad
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@339a2706
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@477418bd
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 15:31:18] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 15:31:24] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 15:31:24] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 15:31:24] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 15:31:24] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 15:31:24] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 15:31:24] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:31:24] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 15:31:24] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:31:24] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 07:31:24 GMT]
[2020-10-26 15:31:24] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 15:46:06] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 15:46:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:46:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:46:12] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 15:46:13] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 15:46:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 15:46:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 15:46:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 15:46:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 15:46:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 15:46:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 15:46:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 15:46:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 15:46:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 15:46:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 15:46:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 15:46:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 15:46:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 15:46:15] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 15:46:15] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 15:46:15] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1d99ee1b
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 15:46:15] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 15:46:15] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 15:46:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 15:46:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:46:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 15:46:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:46:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 15:47:24] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 15:47:24] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7a2bd23c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4216e772
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4b440118
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 15:47:24] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 15:47:30] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 15:47:30] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 15:47:30] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 15:47:30] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 15:47:30] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 15:47:30] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:47:30] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 15:47:30] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:47:30] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 07:47:30 GMT]
[2020-10-26 15:47:30] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 15:49:52] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 15:49:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:49:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:49:57] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 15:49:58] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 15:49:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 15:49:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 15:49:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 15:49:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 15:49:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 15:49:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 15:49:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 15:49:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 15:49:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 15:49:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 15:49:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 15:49:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 15:49:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 15:50:00] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 15:50:00] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 15:50:00] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 15:50:01] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7a358613
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 15:50:01] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 15:50:01] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 15:50:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 15:50:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:50:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 15:50:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:50:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 15:50:05] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 15:50:05] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7d104d40
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4293d5bb
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@17aa6a6
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 15:50:05] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 15:50:11] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 15:50:11] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 15:50:11] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 15:50:11] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 15:50:11] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 15:50:11] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:50:11] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 15:50:11] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:50:11] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 07:50:11 GMT]
[2020-10-26 15:50:11] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 15:51:15] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 15:51:15] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:51:15] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:51:22] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 15:51:24] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 15:51:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 15:51:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 15:51:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 15:51:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 15:51:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 15:51:25] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 15:51:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 15:51:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@29bd85db
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 15:51:26] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 15:51:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 15:51:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 15:51:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:51:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 15:51:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:51:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 15:51:32] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 15:51:32] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4ba9d8a3
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6db27d42
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@21155006
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 15:51:32] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 15:51:37] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 15:51:37] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 15:51:37] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 15:51:37] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 15:51:37] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 15:51:37] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:51:37] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 15:51:37] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:51:37] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 07:51:37 GMT]
[2020-10-26 15:51:37] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 15:54:19] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 15:54:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:54:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 15:54:25] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 15:54:26] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 15:54:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 15:54:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 15:54:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 15:54:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 15:54:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 15:54:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 15:54:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 15:54:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 15:54:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 15:54:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 15:54:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 15:54:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 15:54:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 15:54:28] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 15:54:28] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 15:54:28] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6568f998
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 15:54:28] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 15:54:28] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 15:54:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 15:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 15:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 15:54:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 15:55:45] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 15:55:45] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7abe1962
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@a4d175a
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6b0d3ae3
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 15:55:45] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 15:55:51] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 15:55:51] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 15:55:51] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 15:55:51] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 15:55:51] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 15:55:51] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:55:51] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 15:55:51] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 15:55:51] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 07:55:51 GMT]
[2020-10-26 15:55:51] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 16:01:54] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 16:01:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:01:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:02:00] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 16:02:01] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 16:02:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 16:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 16:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 16:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 16:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 16:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 16:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 16:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 16:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 16:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 16:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 16:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 16:02:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 16:02:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 16:02:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 16:02:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3af236d0
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 16:02:03] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 16:02:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 16:02:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 16:02:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:02:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 16:02:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:02:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 16:02:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 16:02:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3624c6d3
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@320b3cbf
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@60396b01
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 16:02:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 16:02:16] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 16:02:16] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 16:02:16] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 16:02:16] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 16:02:16] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 16:02:16] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:02:16] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 16:02:16] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:02:16] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 08:02:16 GMT]
[2020-10-26 16:02:16] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 16:07:52] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 16:07:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:07:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:07:57] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 16:07:58] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 16:07:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 16:07:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 16:07:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 16:07:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 16:07:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 16:07:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 16:07:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 16:07:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 16:07:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 16:07:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 16:07:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 16:07:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 16:07:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 16:08:00] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 16:08:00] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 16:08:00] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5f2de715
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 16:08:00] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 16:08:00] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 16:08:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 16:08:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:08:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 16:08:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:08:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 16:09:35] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 16:09:36] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 16:09:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 16:09:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 16:09:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 16:09:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 16:09:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 16:09:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 16:09:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 16:09:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 16:09:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 16:09:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 16:09:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 16:09:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 16:09:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 16:09:38] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 16:09:38] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 16:09:38] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@410fc508
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 16:09:38] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 16:09:39] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 16:09:39] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 16:09:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 16:09:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 16:09:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 16:09:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 16:09:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 16:09:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 16:09:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 16:09:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 16:09:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 16:09:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 16:09:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 16:09:39] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 16:09:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:09:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 16:09:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:09:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 16:10:00] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 16:10:00] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5e5fa4f6
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1e5f4acd
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@58e5e1bb
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 16:10:00] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 16:10:07] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 16:10:07] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 16:10:07] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 16:10:07] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 16:10:07] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 16:10:07] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:10:07] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 16:10:07] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:10:07] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 08:10:07 GMT]
[2020-10-26 16:10:07] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 16:10:31] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 16:10:31] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:10:31] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:15:27] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 16:15:28] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 16:15:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 16:15:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 16:15:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 16:15:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 16:15:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 16:15:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 16:15:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 16:15:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 16:15:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 16:15:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 16:15:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 16:15:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 16:15:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 16:15:30] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 16:15:31] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 16:15:31] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2674d4f6
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 16:15:31] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 16:15:31] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 16:15:31] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 16:15:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:15:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 16:15:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:15:31] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 16:16:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 16:16:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@9749c61
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@183b8e32
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6e788226
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 16:16:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 16:16:18] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 16:16:18] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 16:16:18] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 16:16:18] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 16:16:18] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 16:16:18] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:16:18] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 16:16:18] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:16:18] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 08:16:18 GMT]
[2020-10-26 16:16:18] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 16:18:13] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 16:18:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:18:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:18:19] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 16:18:20] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 16:18:20] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 16:18:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 16:18:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 16:18:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 16:18:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 16:18:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 16:18:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 16:18:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 16:18:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 16:18:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 16:18:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 16:18:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 16:18:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 16:18:22] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 16:18:22] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 16:18:22] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@46612bfc
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 16:18:22] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 16:18:22] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 16:18:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 16:18:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:18:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 16:18:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:18:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 16:18:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 16:18:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5ce94605
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7d104d40
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4293d5bb
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 16:18:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 16:18:36] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 16:18:36] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 16:18:36] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 16:18:36] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 16:18:36] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 16:18:36] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:18:36] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 16:18:36] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:18:36] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 08:18:36 GMT]
[2020-10-26 16:18:36] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 16:25:12] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 16:25:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:25:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:25:18] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 16:25:19] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 16:25:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 16:25:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 16:25:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 16:25:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 16:25:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 16:25:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 16:25:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 16:25:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 16:25:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 16:25:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 16:25:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 16:25:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 16:25:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 16:25:21] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 16:25:21] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 16:25:21] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4ae8fb2a
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 16:25:21] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 16:25:21] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 16:25:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 16:25:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:25:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 16:25:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:25:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 16:25:43] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 16:25:43] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@1c455c57
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1dba2f48
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@47060107
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 16:25:43] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 16:25:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 16:25:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 16:25:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 16:25:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 16:25:50] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 16:25:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:25:50] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 16:25:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:25:50] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 08:25:50 GMT]
[2020-10-26 16:25:50] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 16:29:45] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 16:29:45] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:29:45] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:29:48] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 16:29:49] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 16:29:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 16:29:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 16:29:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 16:29:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 16:29:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 16:29:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 16:29:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 16:29:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 16:29:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 16:29:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 16:29:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 16:29:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 16:29:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 16:29:51] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 16:29:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 16:29:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3e6748ae
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 16:29:52] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 16:29:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 16:29:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 16:29:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:29:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 16:29:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:29:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 16:30:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 16:30:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3425d407
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@13e61063
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@304dad0f
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 16:30:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 16:30:33] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 16:30:33] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 16:30:33] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 16:30:33] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 16:30:33] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 16:30:33] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:30:33] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 16:30:33] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:30:33] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 08:30:33 GMT]
[2020-10-26 16:30:33] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 16:31:10] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 16:31:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:31:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 16:31:13] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 16:31:14] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 16:31:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 16:31:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 16:31:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 16:31:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 16:31:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 16:31:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 16:31:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 16:31:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 16:31:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 16:31:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 16:31:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 16:31:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 16:31:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 16:31:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 16:31:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 16:31:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5f95f1e1
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 16:31:16] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 16:31:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 16:31:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 16:31:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:31:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 16:31:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 16:31:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 16:31:26] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 16:31:26] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@bdfdf39
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1d24c6fa
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@718e1b09
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 16:31:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 16:31:32] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 16:31:32] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 16:31:32] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 16:31:32] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 16:31:32] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 16:31:32] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:31:32] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 16:31:32] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:31:32] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 08:31:32 GMT]
[2020-10-26 16:31:32] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 16:35:09] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [null] from doGetAuthenticationInfo
[2020-10-26 16:35:09] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- No AuthenticationInfo found for submitted AuthenticationToken [org.apache.shiro.authc.UsernamePasswordToken - 1051820, rememberMe=false].  Returning null.
[2020-10-26 16:35:09] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 08:35:09 GMT]
[2020-10-26 16:35:35] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [曾生莉] from doGetAuthenticationInfo
[2020-10-26 16:35:35] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [曾生莉].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1051820, rememberMe=false].
[2020-10-26 16:35:35] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 16:35:35] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 16:35:35] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1051820, rememberMe=false].  Returned account [曾生莉]
[2020-10-26 16:35:35] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:35:35] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 16:35:35] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 16:35:35] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 08:35:35 GMT]
[2020-10-26 16:35:35] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 17:02:52] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:02:53] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:02:53] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:02:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:02:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:02:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:02:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:02:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:02:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:02:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:02:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:02:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:02:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:02:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:02:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:02:55] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:02:55] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:02:55] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6015a4a5
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:02:55] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:02:55] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:02:55] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:02:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:02:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:02:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:02:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:03:03] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 17:03:03] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2fec1605
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@595cbef2
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3e80728b
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 17:03:03] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 17:03:09] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 17:03:09] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 17:03:09] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 17:03:09] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 17:03:09] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 17:03:09] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:03:09] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 17:03:09] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:03:09] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 09:03:09 GMT]
[2020-10-26 17:03:09] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 17:04:12] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 17:04:12] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 17:04:12] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 17:04:12] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 17:04:12] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 17:04:12] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:04:12] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 17:04:12] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:04:12] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 09:04:12 GMT]
[2020-10-26 17:04:12] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 17:14:24] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:14:25] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:14:27] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:14:27] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:14:27] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6d0b0da6
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:14:27] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:14:27] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:14:27] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:14:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:14:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:14:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:14:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:14:33] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 17:14:33] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@14f3d5e6
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@ba20e68
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4fff771d
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 17:14:33] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 17:14:40] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 17:14:40] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 17:14:40] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 17:14:40] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 17:14:40] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 17:14:40] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:14:40] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 17:14:40] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:14:40] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 09:14:40 GMT]
[2020-10-26 17:14:40] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 17:14:58] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 17:14:58] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 17:14:58] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 17:14:58] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 17:14:58] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 17:14:58] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:14:58] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 17:14:58] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:14:58] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 09:14:58 GMT]
[2020-10-26 17:14:58] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 17:18:59] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:19:00] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:19:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:19:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:19:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:19:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:19:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:19:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:19:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:19:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:19:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:19:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:19:01] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:19:02] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:19:02] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@630b6190
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:19:02] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:19:02] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:19:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:19:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:19:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:19:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:19:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:19:06] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 17:19:06] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5480da1a
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@38ed884b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7b6fddab
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 17:19:06] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 17:19:12] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 17:19:12] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 17:19:12] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 17:19:12] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 17:19:12] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 17:19:12] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:19:12] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 17:19:12] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:19:12] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 09:19:12 GMT]
[2020-10-26 17:19:12] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 17:24:59] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:25:00] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:25:00] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:25:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:25:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:25:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:25:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:25:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:25:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:25:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:25:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:25:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:25:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:25:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:25:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:25:02] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:25:02] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:25:02] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@630b6190
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:25:02] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:25:02] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:25:02] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:25:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:25:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:25:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:25:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:26:33] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:26:34] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:26:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:26:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:26:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:26:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:26:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:26:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:26:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:26:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:26:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:26:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:26:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:26:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:26:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:26:36] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:26:36] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:26:36] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5f95f1e1
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:26:36] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:26:36] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:26:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:26:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:26:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:26:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:26:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:26:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 17:26:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@44564dd4
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1931a162
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7a339ce9
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 17:26:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 17:27:06] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 17:27:06] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 17:27:06] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 17:27:06] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 17:27:06] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 17:27:06] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:27:06] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 17:27:06] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:27:06] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 09:27:06 GMT]
[2020-10-26 17:27:06] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 17:27:39] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:27:40] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:27:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:27:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:27:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:27:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:27:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:27:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:27:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:27:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:27:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:27:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:27:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:27:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:27:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:27:42] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:27:42] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:27:42] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@532e27ab
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:27:42] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:27:42] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:27:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:27:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:27:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:27:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:27:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:27:47] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 17:27:47] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@189692ba
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@210b2066
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@497d0633
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 17:27:47] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 17:27:53] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 17:27:53] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 17:27:53] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 17:27:53] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 17:27:53] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 17:27:53] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:27:53] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 17:27:53] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:27:53] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 09:27:53 GMT]
[2020-10-26 17:27:53] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 17:34:22] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:34:23] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:34:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:34:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:34:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:34:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:34:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:34:24] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:34:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:34:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@490c7a83
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:34:25] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:34:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:34:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:34:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:34:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:34:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:34:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:36:47] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:36:48] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:36:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:36:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:36:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:36:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:36:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:36:49] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:36:50] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:36:50] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@39e69ea7
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:36:50] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:36:50] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:36:50] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:36:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:36:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:36:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:36:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:36:54] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 17:36:54] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2725783a
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@755a8b09
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@44b8ac61
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 17:36:54] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 17:37:00] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 17:37:00] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 17:37:00] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 17:37:00] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 17:37:00] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 17:37:00] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:37:00] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 17:37:00] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:37:00] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 09:37:00 GMT]
[2020-10-26 17:37:00] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 17:49:09] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:49:10] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:49:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:49:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:49:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:49:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:49:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:49:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:49:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:49:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:49:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:49:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:49:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:49:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:49:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:49:12] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:49:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:49:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1cdc1bbc
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:49:12] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:49:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:49:12] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:49:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:49:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:49:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:49:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:49:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 17:49:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@32a4a9f8
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@42dc6c52
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7e737acd
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 17:49:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 17:49:22] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 17:49:22] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 17:49:22] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 17:49:22] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 17:49:22] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 17:49:22] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:49:22] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 17:49:22] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:49:22] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 09:49:22 GMT]
[2020-10-26 17:49:22] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 17:52:10] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:52:11] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:52:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:52:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:52:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:52:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:52:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:52:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:52:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:52:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:52:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:52:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:52:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:52:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:52:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:52:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:52:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:52:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@459b6c53
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:52:13] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:52:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:52:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:52:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:52:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:52:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:52:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:52:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 17:52:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2725783a
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@755a8b09
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@44b8ac61
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 17:52:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 17:52:23] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 17:52:23] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 17:52:23] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 17:52:23] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 17:52:23] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 17:52:23] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:52:23] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 17:52:23] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:52:23] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 09:52:23 GMT]
[2020-10-26 17:52:23] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 17:53:08] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:53:09] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:53:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:53:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:53:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:53:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:53:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:53:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:53:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:53:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:53:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:53:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:53:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:53:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:53:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:53:11] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:53:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:53:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1cdc1bbc
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:53:11] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:53:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:53:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:53:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:53:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:53:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:53:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:53:17] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:53:18] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:53:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:53:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:53:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:53:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:53:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:53:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:53:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:53:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:53:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:53:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:53:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:53:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:53:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:53:20] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:53:20] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:53:20] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6d0b0da6
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:53:20] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:53:20] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:53:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:53:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:53:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:53:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:53:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:53:28] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 17:53:28] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@267a3f4c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@8488266
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1ba0aac8
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 17:53:28] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 17:53:35] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 17:53:35] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 17:53:35] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 17:53:35] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 17:53:35] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 17:53:35] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:53:35] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 17:53:35] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:53:35] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 09:53:35 GMT]
[2020-10-26 17:53:35] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 17:55:51] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 17:55:52] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 17:55:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 17:55:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 17:55:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 17:55:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 17:55:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 17:55:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 17:55:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 17:55:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 17:55:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 17:55:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 17:55:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 17:55:53] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 17:55:53] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 17:55:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 17:55:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6d0b0da6
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 17:55:54] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 17:55:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 17:55:54] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 17:55:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:55:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 17:55:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 17:55:54] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 17:55:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-26 17:55:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2c04fde5
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5e0a22d2
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1bb0a266
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-26 17:55:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-26 17:56:04] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-26 17:56:04] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-26 17:56:04] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-26 17:56:04] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-26 17:56:04] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-26 17:56:04] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:56:05] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-26 17:56:05] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-26 17:56:05] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 25-Oct-2020 09:56:05 GMT]
[2020-10-26 17:56:05] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-26 18:50:13] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 18:50:15] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 18:50:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 18:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 18:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 18:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 18:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 18:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 18:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 18:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 18:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 18:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 18:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 18:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 18:50:17] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 18:50:17] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 18:50:17] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3ca3648
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 18:50:17] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 18:50:17] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 18:50:17] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 18:50:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 18:50:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 18:50:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 18:50:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 18:50:18] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 18:50:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 18:50:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 18:51:26] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 18:51:27] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 18:51:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 18:51:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 18:51:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 18:51:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 18:51:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 18:51:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 18:51:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 18:51:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 18:51:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 18:51:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 18:51:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 18:51:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 18:51:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 18:51:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 18:51:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 18:51:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@59918c8f
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 18:51:29] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 18:51:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 18:51:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 18:51:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 18:51:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 18:51:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 18:51:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 18:51:31] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 18:51:31] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 18:51:31] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 18:58:11] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 18:58:12] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 18:58:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 18:58:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 18:58:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 18:58:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 18:58:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 18:58:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 18:58:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 18:58:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 18:58:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 18:58:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 18:58:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 18:58:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 18:58:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 18:58:15] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 18:58:15] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 18:58:15] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@459b6c53
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 18:58:15] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 18:58:15] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 18:58:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 18:58:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 18:58:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 18:58:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 18:58:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 18:58:16] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 18:58:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 18:58:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 19:00:04] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 19:00:05] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 19:00:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 19:00:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 19:00:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 19:00:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 19:00:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 19:00:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 19:00:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 19:00:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 19:00:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 19:00:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 19:00:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 19:00:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 19:00:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 19:00:07] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 19:00:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 19:00:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@630b6190
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 19:00:07] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 19:00:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 19:00:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 19:00:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 19:00:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 19:00:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 19:00:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-26 19:00:09] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-26 19:00:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 19:00:09] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-26 19:20:56] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-26 19:20:58] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\CProjLoginSampleMapper.class]
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\ProjectMapper.class]
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionBMapper.class]
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\QcCommissionHMapper.class]
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'CProjLoginSampleMapper' and 'cn.besbing.model.mapper.primary.CProjLoginSampleMapper' mapperInterface
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'projectMapper' and 'cn.besbing.model.mapper.primary.ProjectMapper' mapperInterface
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionBMapper' and 'cn.besbing.model.mapper.primary.QcCommissionBMapper' mapperInterface
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'qcCommissionHMapper' and 'cn.besbing.model.mapper.primary.QcCommissionHMapper' mapperInterface
[2020-10-26 19:20:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-26 19:20:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-26 19:20:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\CProjLoginSampleMapper.xml]'
[2020-10-26 19:20:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-26 19:20:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-26 19:20:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-26 19:20:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-26 19:20:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-26 19:20:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-26 19:20:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\ProjectMapper.xml]'
[2020-10-26 19:20:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionBMapper.xml]'
[2020-10-26 19:20:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\QcCommissionHMapper.xml]'
[2020-10-26 19:20:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-26 19:21:00] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-26 19:21:01] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-26 19:21:01] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1b7554d4
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-26 19:21:01] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-26 19:21:01] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-26 19:21:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-26 19:21:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 19:21:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-26 19:21:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-26 19:21:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
