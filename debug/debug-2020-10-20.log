[2020-10-20 08:48:30] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 08:48:31] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 08:48:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 08:48:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 08:48:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 08:48:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 08:48:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 08:48:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 08:48:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 08:48:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 08:48:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/permissionList] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/permissionList] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 08:48:33] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 08:48:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 08:48:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6afbe6a1
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 08:48:33] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 08:48:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 08:48:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 08:48:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 08:48:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 08:48:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 08:48:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 08:48:34] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:01:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:01:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4c429367
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@35f54d0e
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7a328e36
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:01:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:02:17] -- [DEBUG]: [org.apache.shiro.web.servlet.AdviceFilter] -- Filter execution resulted in an unexpected Exception (not IOException or ServletException as the Filter API recommends).  Wrapping in ServletException and propagating.
[2020-10-20 10:02:17] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-20 10:02:17] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-20 10:02:17] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-20 10:02:23] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:02:24] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:02:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:02:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:02:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:02:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:02:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:02:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:02:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/permissionList] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/permissionList] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:02:25] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:02:25] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:02:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:02:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7b66322e
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:02:26] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:02:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:02:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:02:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:02:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:02:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:02:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:02:26] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:03:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:03:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7d8e6234
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3fbb7305
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@56b2f8dc
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:03:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:04:11] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:04:11] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:04:11] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:04:11] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:04:11] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:04:11] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:04:11] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:04:11] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:04:11] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:04:11 GMT]
[2020-10-20 10:04:11] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:12:46] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:12:47] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:12:47] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:12:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:12:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:12:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:12:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:12:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:12:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:12:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:12:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/permissionList] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/permissionList] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:12:49] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:12:49] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:12:49] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5a50d9fc
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:12:49] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:12:49] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:12:49] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:12:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:12:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:12:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:12:49] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:12:50] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:12:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:12:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@34cf70e2
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@38dc58e0
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1c96018a
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:12:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:13:05] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:13:05] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:13:05] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:13:05] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:13:05] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:13:05] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:13:05] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:13:05] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:13:05] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:13:05 GMT]
[2020-10-20 10:13:05] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:14:24] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:14:24] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:14:24] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:14:24] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:14:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:14:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:14:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:14:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:14:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:14:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:14:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:14:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:14:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:14:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/permissionList] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/permissionList] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:14:26] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:14:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:14:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6f9c5048
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:14:26] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:14:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:14:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:14:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:14:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:14:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:14:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:14:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:14:43] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:14:43] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@45290017
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@10e06226
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@794154c6
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:14:43] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:14:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:14:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:14:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:14:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:14:50] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:14:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:14:50] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:14:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:14:50] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:14:50 GMT]
[2020-10-20 10:14:50] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:16:13] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:16:13] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:16:13] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:16:13] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:16:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:16:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:16:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:16:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:16:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:16:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:16:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:16:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:16:13] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:16:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/permissionList] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/permissionList] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:16:15] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:16:15] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:16:15] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3f183caa
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:16:15] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:16:15] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:16:15] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:16:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:16:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:16:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:16:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:16:16] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:16:41] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:16:41] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@1f0c661c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@252e3d12
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2f90c239
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:16:41] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:16:48] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:16:48] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:16:48] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:16:48] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:16:48] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:16:48] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:16:48] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:16:48] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:16:48] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:16:48 GMT]
[2020-10-20 10:16:48] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:17:26] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:17:27] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:17:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:17:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:17:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:17:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:17:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:17:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:17:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:17:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:17:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/permissionList] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/permissionList] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:17:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:17:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:17:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@63538bb4
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:17:29] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:17:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:17:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:17:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:17:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:17:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:17:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:17:30] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:17:47] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:17:47] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@79d31364
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4b185890
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4eaf5667
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:17:47] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:17:54] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:17:54] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:17:54] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:17:54] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:17:54] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:17:54] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:17:54] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:17:54] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:17:54] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:17:54 GMT]
[2020-10-20 10:17:54] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:19:03] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:19:04] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:19:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:19:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:19:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:19:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:19:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:19:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:19:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:19:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:19:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:19:06] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:19:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:19:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7b66322e
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:19:06] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:19:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:19:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:19:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:19:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:19:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:19:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:19:07] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:20:15] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:20:15] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:20:15] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:20:15] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:20:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:20:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:20:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:20:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:20:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:20:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:20:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:20:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:20:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:20:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:20:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:20:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:20:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:20:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:20:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:20:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:20:17] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:20:18] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:20:18] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4d69d288
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:20:18] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:20:18] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:20:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:20:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:20:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:20:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:20:18] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:20:29] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:20:29] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@1c46a7f2
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1049ce09
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@693453bc
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:20:29] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:20:37] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:20:37] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:20:37] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:20:37] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:20:37] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:20:37] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:20:37] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:20:37] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:20:37] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:20:37 GMT]
[2020-10-20 10:20:37] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:22:08] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-20 10:22:08] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-20 10:22:08] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-20 10:22:14] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:22:14] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:22:14] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:22:14] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:22:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:22:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:22:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:22:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:22:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:22:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:22:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:22:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:22:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:22:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:22:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:22:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:22:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@dd71b20
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:22:16] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:22:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:22:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:22:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:22:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:22:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:22:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:22:17] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:22:20] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:22:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5184af82
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3f7f6061
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6fa8df37
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:22:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:22:31] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:22:31] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:22:31] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:22:31] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:22:31] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:22:31] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:22:31] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:22:31] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:22:31 GMT]
[2020-10-20 10:22:31] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:23:32] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:23:38] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:23:39] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:23:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:23:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:23:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:23:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:23:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:23:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:23:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:23:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:23:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:23:41] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:23:41] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:23:41] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@dd71b20
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:23:41] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:23:41] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:23:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:23:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:23:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:23:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:23:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:23:42] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:24:05] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:24:05] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@63193e43
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6f932e0a
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@60036055
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:24:05] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:24:11] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:24:11] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:24:11] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:24:11] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:24:11] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:24:11] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:24:11] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:24:11] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:24:11] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:24:11 GMT]
[2020-10-20 10:24:11] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:25:00] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:25:01] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:25:01] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:25:01] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:25:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:25:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:25:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:25:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:25:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:25:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:25:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:25:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:25:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:25:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/loading/**] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/loading/**] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:25:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:25:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:25:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3f183caa
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:25:03] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:25:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:25:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:25:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:25:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:25:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:25:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:25:04] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:25:22] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:25:22] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@319bcdb1
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@42127356
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@44833386
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:25:22] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:25:29] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:25:29] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:25:29] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:25:29] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:25:29] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:25:29] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:25:29] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:25:29] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:25:29] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:25:29 GMT]
[2020-10-20 10:25:29] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:28:08] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:28:09] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:28:09] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:28:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:28:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:28:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:28:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:28:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:28:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:28:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:28:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/dataloaderpermission] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:28:11] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:28:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:28:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@63538bb4
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:28:11] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:28:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:28:11] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:28:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:28:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:28:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:28:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:28:11] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:28:23] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:28:23] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2936dd20
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2c64a421
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@d5604f5
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:28:23] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:28:47] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:28:47] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:28:47] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:28:47] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:28:47] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:28:47] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:28:47] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:28:47] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:28:47] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:28:47 GMT]
[2020-10-20 10:28:47] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:29:15] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:29:16] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:29:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:29:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:29:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:29:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:29:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:29:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:29:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:29:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:29:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/dataloaderpermission] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:29:18] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:29:18] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:29:18] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@23ad2d17
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:29:18] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:29:18] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:29:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:29:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:29:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:29:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:29:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:29:19] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:29:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:29:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@53b638a
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6019ee95
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6efe66bd
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:29:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:34:43] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-20 10:34:43] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-20 10:34:43] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-20 10:34:48] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:34:49] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:34:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:34:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:34:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:34:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:34:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:34:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:34:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:34:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:34:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:34:51] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:34:51] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:34:51] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@767f6ee7
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:34:51] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:34:51] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:34:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:34:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:34:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:34:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:34:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:34:52] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:34:56] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:34:56] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7fb2149e
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@44ec2de7
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@453a1e0f
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:34:56] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:35:26] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:35:26] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:35:26] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:35:26] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:35:26] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:35:26] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:35:26] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:35:26] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:35:26] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:35:26 GMT]
[2020-10-20 10:35:26] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:36:17] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:36:18] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:36:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:36:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:36:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:36:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:36:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:36:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:36:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:36:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:36:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:36:19] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:36:20] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:36:20] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@106d77da
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:36:20] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:36:20] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:36:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:36:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:36:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:36:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:36:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:36:20] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:36:25] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:36:25] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3df7bad9
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@292d1253
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@109bc888
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:36:25] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:36:48] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:36:48] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:36:48] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:36:48] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:36:48] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:36:48] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:36:48] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:36:48] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:36:48] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:36:48 GMT]
[2020-10-20 10:36:48] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:37:57] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:37:58] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:37:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:37:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:37:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:37:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:37:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:37:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:37:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:37:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:37:59] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:37:59] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:38:00] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:38:00] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6f9c5048
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:38:00] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:38:00] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:38:00] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:38:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:38:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:38:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:38:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:38:00] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:38:10] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:38:10] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@23a0466e
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@19c59c03
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2936dd20
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:38:10] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:38:18] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:38:18] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:38:18] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:38:18] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:38:18] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:38:18] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:38:18] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:38:18] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:38:18] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:38:18 GMT]
[2020-10-20 10:38:18] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:39:11] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:39:12] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:39:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:39:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:39:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:39:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:39:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:39:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:39:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@43a09ce2
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:39:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:39:14] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:39:14] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:39:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:39:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:39:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:39:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:39:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:39:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:39:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:39:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:39:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:39:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:39:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:39:14] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:39:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:39:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:39:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:39:14] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:39:14] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:39:23] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:39:23] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@78b3bcd0
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4c00c12c
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@18dfd558
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:39:23] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:39:30] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:39:30] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:39:30] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:39:30] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:39:30] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:39:30] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:39:30] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:39:30] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:39:30] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:39:30 GMT]
[2020-10-20 10:39:30] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:41:23] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:41:23] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:41:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:41:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:41:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:41:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:41:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:41:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:41:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:41:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:41:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:41:25] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:41:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:41:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5a50d9fc
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:41:25] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:41:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:41:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:41:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:41:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:41:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:41:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:41:26] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:41:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:41:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@37b81290
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@48681f70
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7d5d917b
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:41:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:41:47] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:41:47] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:41:47] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:41:47] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:41:47] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:41:47] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:41:47] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:41:47] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:41:47] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:41:47 GMT]
[2020-10-20 10:41:47] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:44:07] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:44:08] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:44:08] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:44:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:44:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:44:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:44:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:44:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:44:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:44:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:44:09] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:44:09] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:44:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:44:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5a50d9fc
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:44:10] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:44:10] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:44:10] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:44:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:44:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:44:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:44:10] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:44:10] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:44:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:44:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2d028f5e
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5521f9a1
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4d920f19
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:44:16] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:44:23] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [null] from doGetAuthenticationInfo
[2020-10-20 10:44:23] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- No AuthenticationInfo found for submitted AuthenticationToken [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returning null.
[2020-10-20 10:44:23] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:44:23 GMT]
[2020-10-20 10:44:34] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:44:34] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:44:34] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:44:34] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:44:34] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:44:34] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:44:34] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:44:34] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:44:34] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:44:34 GMT]
[2020-10-20 10:44:34] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:45:37] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:45:38] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:45:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:45:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:45:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:45:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:45:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:45:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:45:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:45:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:45:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:45:40] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:45:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:45:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6f9c5048
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:45:40] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:45:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:45:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:45:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:45:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:45:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:45:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:45:41] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:47:37] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:47:38] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:47:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:47:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:47:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:47:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:47:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:47:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:47:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:47:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:47:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:47:40] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:47:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:47:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@fb2e3fd
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:47:40] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:47:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:47:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:47:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:47:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:47:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:47:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:47:41] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:47:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:47:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5a3ab4f7
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@177ac2b7
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3aa3a911
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:47:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:48:00] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:48:00] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:48:00] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:48:00] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:48:00] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:48:00] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:48:00] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:48:00] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:48:00] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:48:00 GMT]
[2020-10-20 10:48:00] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:48:38] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:48:39] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:48:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:48:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:48:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:48:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:48:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:48:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:48:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:48:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:48:40] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:48:41] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:48:41] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3f183caa
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:48:41] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:48:41] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:48:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:48:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:48:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:48:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:48:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:48:41] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:51:35] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:51:35] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:51:35] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:51:35] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:51:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:51:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:51:37] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:51:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:51:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5a50d9fc
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:51:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:51:37] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:51:38] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:51:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:51:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:51:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:51:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:51:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:51:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:51:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:51:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:51:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:51:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:51:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:51:38] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:51:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:51:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:51:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:51:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:51:38] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:51:42] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:51:42] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@319bcdb1
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@42127356
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@44833386
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:51:42] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:51:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:51:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:51:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:51:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:51:50] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:51:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:51:50] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:51:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:51:50] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:51:50 GMT]
[2020-10-20 10:51:50] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:52:20] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:52:21] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:52:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:52:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:52:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:52:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:52:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:52:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:52:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:52:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:52:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:52:23] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:52:23] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:52:23] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@106d77da
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:52:23] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:52:23] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:52:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:52:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:52:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:52:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:52:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:52:23] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 10:52:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 10:52:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@1388f78d
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4d61185
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3f4d858b
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 10:52:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 10:52:44] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 10:52:44] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 10:52:44] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 10:52:44] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 10:52:44] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 10:52:44] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:52:44] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 10:52:44] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 10:52:44] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 02:52:44 GMT]
[2020-10-20 10:52:44] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 10:57:40] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 10:57:40] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 10:57:40] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 10:57:40] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 10:57:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:57:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 10:57:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 10:57:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 10:57:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 10:57:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 10:57:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 10:57:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 10:57:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 10:57:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 10:57:42] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 10:57:42] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 10:57:42] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6f9c5048
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 10:57:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 10:57:42] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 10:57:42] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 10:57:43] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 10:57:43] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 10:57:43] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 10:57:43] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 10:57:43] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 10:57:43] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 10:57:43] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 10:57:43] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 10:57:43] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 10:57:43] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 10:57:43] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 10:57:43] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 10:57:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:57:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 10:57:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 10:57:43] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 10:57:43] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 11:01:05] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 11:01:05] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 11:01:05] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 11:01:05] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 11:01:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 11:01:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 11:01:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 11:01:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 11:01:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 11:01:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 11:01:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 11:01:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 11:01:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 11:01:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 11:01:07] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 11:01:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 11:01:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@43aeb5e0
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 11:01:07] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 11:01:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 11:01:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 11:01:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 11:01:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 11:01:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 11:01:08] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 11:01:08] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 11:01:13] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 11:01:13] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2d028f5e
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5521f9a1
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4d920f19
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 11:01:13] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 11:01:20] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 11:01:20] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 11:01:20] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 11:01:20] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 11:01:20] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 11:01:20] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 11:01:20] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 11:01:20] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 11:01:20] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 03:01:20 GMT]
[2020-10-20 11:01:20] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 11:02:22] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 11:02:22] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 11:02:22] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 11:02:22] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 11:02:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 11:02:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 11:02:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 11:02:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 11:02:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 11:02:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 11:02:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 11:02:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 11:02:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 11:02:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 11:02:24] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 11:02:24] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 11:02:24] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2274160
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 11:02:24] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 11:02:24] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 11:02:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 11:02:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 11:02:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 11:02:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 11:02:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 11:02:25] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 11:02:28] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 11:02:29] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@51c9aeb4
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4c0f3bf5
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4d694c6c
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 11:02:29] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 11:02:35] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 11:02:35] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 11:02:35] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 11:02:35] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 11:02:35] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 11:02:35] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 11:02:35] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 11:02:35] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 11:02:35] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 03:02:35 GMT]
[2020-10-20 11:02:35] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 11:06:04] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 11:06:05] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 11:06:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 11:06:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 11:06:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 11:06:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 11:06:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 11:06:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 11:06:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 11:06:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 11:06:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 11:06:07] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 11:06:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 11:06:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5a50d9fc
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 11:06:07] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 11:06:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 11:06:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 11:06:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 11:06:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 11:06:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 11:06:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 11:06:08] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 11:06:13] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 11:06:13] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@24188114
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2f49715b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@783ef345
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 11:06:13] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 11:06:20] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 11:06:20] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 11:06:20] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 11:06:20] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 11:06:20] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 11:06:20] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 11:06:20] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 11:06:20] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 11:06:20] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 03:06:20 GMT]
[2020-10-20 11:06:20] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-20 11:07:04] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-20 11:07:05] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-20 11:07:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-20 11:07:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-20 11:07:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-20 11:07:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-20 11:07:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-20 11:07:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-20 11:07:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-20 11:07:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [http://localhost/dataloaderpermission] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [http://localhost/dataloaderpermission] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-20 11:07:06] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-20 11:07:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-20 11:07:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5a50d9fc
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-20 11:07:07] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-20 11:07:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-20 11:07:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-20 11:07:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 11:07:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-20 11:07:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-20 11:07:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-20 11:07:07] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-20 11:07:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-20 11:07:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@e4dc8c9
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@14f95650
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7b20af20
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-20 11:07:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-20 11:07:25] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-20 11:07:25] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-20 11:07:25] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-20 11:07:25] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-20 11:07:25] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-20 11:07:25] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 11:07:25] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-20 11:07:25] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-20 11:07:25] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Oct-2020 03:07:25 GMT]
[2020-10-20 11:07:25] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
