[2020-10-22 07:55:04] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 07:55:04] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 07:55:04] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 07:55:04] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 07:55:04] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 07:55:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 07:55:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 07:55:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 07:55:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 07:55:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 07:55:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 07:55:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 07:55:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 07:55:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 07:55:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 07:55:06] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 07:55:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 07:55:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@63cd2cd2
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 07:55:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 07:55:06] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 07:55:07] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 07:55:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 07:55:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 07:55:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 07:55:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 07:55:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 07:55:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 07:55:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 07:55:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 07:55:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 07:55:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 07:55:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 07:55:07] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 07:55:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 07:55:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 07:55:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 07:55:07] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 07:55:07] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 07:55:13] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 07:55:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@469bd31
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@ab31efd
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1e275edb
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 07:55:14] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 07:55:53] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 07:55:54] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 07:55:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 07:55:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 07:55:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 07:55:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 07:55:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 07:55:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 07:55:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 07:55:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 07:55:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 07:55:56] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 07:55:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 07:55:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@795f5d51
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 07:55:56] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 07:55:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 07:55:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 07:55:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 07:55:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 07:55:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 07:55:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 07:55:57] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 07:56:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 07:56:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@215c3335
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4a8a2885
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1a6e1ffc
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 07:56:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 07:56:16] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 07:56:16] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 07:56:16] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 07:56:16] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 07:56:16] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 07:56:16] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 07:56:16] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 07:56:16] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Tue, 20-Oct-2020 23:56:16 GMT]
[2020-10-22 07:56:16] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 07:59:33] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 07:59:34] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 07:59:34] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 07:59:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 07:59:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 07:59:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 07:59:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 07:59:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 07:59:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 07:59:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 07:59:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 07:59:35] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 07:59:36] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 07:59:36] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@67de7a99
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 07:59:36] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 07:59:36] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 07:59:36] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 07:59:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 07:59:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 07:59:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 07:59:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 07:59:36] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 07:59:51] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 07:59:51] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@15b97ebe
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7d925a15
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@63e86437
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 07:59:51] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 07:59:59] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 07:59:59] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 07:59:59] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 07:59:59] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 07:59:59] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 07:59:59] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 07:59:59] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 07:59:59] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 07:59:59] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Tue, 20-Oct-2020 23:59:59 GMT]
[2020-10-22 07:59:59] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 08:01:20] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 08:01:21] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 08:01:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 08:01:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 08:01:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 08:01:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 08:01:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 08:01:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 08:01:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 08:01:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 08:01:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 08:01:22] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 08:01:23] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 08:01:23] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@65e0b505
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 08:01:23] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 08:01:23] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 08:01:23] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 08:01:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:01:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 08:01:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:01:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 08:01:23] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 08:02:07] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 08:02:08] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3b4fa86c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5f68d5f7
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5043a184
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 08:02:08] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 08:02:16] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 08:02:16] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 08:02:16] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 08:02:16] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 08:02:16] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 08:02:16] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:02:16] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 08:02:16] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:02:16] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 00:02:16 GMT]
[2020-10-22 08:02:16] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 08:02:43] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 08:02:44] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 08:02:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 08:02:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 08:02:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 08:02:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 08:02:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 08:02:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 08:02:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 08:02:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 08:02:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 08:02:45] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 08:02:46] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 08:02:46] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2274160
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 08:02:46] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 08:02:46] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 08:02:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 08:02:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:02:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 08:02:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:02:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 08:02:46] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 08:02:50] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 08:02:50] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@160896e7
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@35b2b495
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@75972fd8
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 08:02:50] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 08:02:57] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 08:02:57] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 08:02:57] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 08:02:57] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 08:02:57] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 08:02:57] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:02:57] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 08:02:57] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:02:57] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 00:02:57 GMT]
[2020-10-22 08:02:57] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 08:03:17] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 08:03:18] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 08:03:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 08:03:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 08:03:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 08:03:19] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 08:03:19] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 08:03:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 08:03:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3ac3f6f
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 08:03:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 08:03:19] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 08:03:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 08:03:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 08:03:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 08:03:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 08:03:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 08:03:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 08:03:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 08:03:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 08:03:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 08:03:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 08:03:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 08:03:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 08:03:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 08:03:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:03:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 08:03:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:03:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 08:03:20] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 08:03:31] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 08:03:31] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@469bd31
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@ab31efd
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1e275edb
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 08:03:31] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 08:03:37] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 08:03:37] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 08:03:37] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 08:03:37] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 08:03:37] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 08:03:37] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:03:37] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 08:03:37] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:03:37] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 00:03:37 GMT]
[2020-10-22 08:03:37] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 08:09:56] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 08:09:57] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 08:09:57] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 08:09:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 08:09:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 08:09:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 08:09:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 08:09:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 08:09:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 08:09:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 08:09:58] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 08:09:59] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 08:09:59] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 08:09:59] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@54067fdc
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 08:09:59] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 08:09:59] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 08:09:59] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 08:09:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:09:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 08:09:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:09:59] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 08:10:00] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 08:10:05] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 08:10:05] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2d96fea9
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@77957760
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@65f0f744
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 08:10:05] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 08:10:12] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 08:10:12] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 08:10:12] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 08:10:12] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 08:10:12] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 08:10:12] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:10:12] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 08:10:12] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:10:12] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 00:10:12 GMT]
[2020-10-22 08:10:12] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 08:12:15] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 08:12:15] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 08:12:15] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 08:12:15] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 08:12:15] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 08:12:15] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:12:15] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 08:12:15] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:12:15] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 00:12:15 GMT]
[2020-10-22 08:12:15] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 08:13:43] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 08:13:44] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 08:13:44] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 08:13:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 08:13:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 08:13:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 08:13:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 08:13:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 08:13:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 08:13:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 08:13:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 08:13:45] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 08:13:46] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 08:13:46] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@557a84fe
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 08:13:46] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 08:13:46] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 08:13:46] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 08:13:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:13:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 08:13:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:13:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 08:13:46] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 08:13:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 08:13:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@6d4c8319
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@76ac33b1
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2355c0f5
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 08:13:57] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 08:14:08] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 08:14:08] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 08:14:08] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 08:14:08] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 08:14:08] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 08:14:08] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:14:08] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 08:14:08] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:14:08] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 00:14:08 GMT]
[2020-10-22 08:14:08] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 08:45:26] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 08:45:27] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 08:45:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 08:45:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 08:45:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 08:45:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 08:45:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 08:45:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 08:45:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 08:45:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 08:45:28] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 08:45:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 08:45:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@54067fdc
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 08:45:29] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 08:45:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 08:45:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 08:45:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:45:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 08:45:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:45:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 08:45:29] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 08:45:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 08:45:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@200517bb
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2107ac31
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2b402f90
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 08:45:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 08:45:46] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 08:45:46] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 08:45:46] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 08:45:46] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 08:45:46] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 08:45:46] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:45:46] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 08:45:46] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:45:46] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 00:45:46 GMT]
[2020-10-22 08:45:46] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 08:49:44] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 08:49:45] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 08:49:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 08:49:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 08:49:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 08:49:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 08:49:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 08:49:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 08:49:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 08:49:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 08:49:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 08:49:47] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 08:49:47] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 08:49:47] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5854a18
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 08:49:47] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 08:49:47] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 08:49:47] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 08:49:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:49:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 08:49:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 08:49:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 08:49:47] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 08:52:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 08:52:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@32cc12c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2c335a13
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@15da1339
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 08:52:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 08:52:44] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 08:52:44] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 08:52:44] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 08:52:44] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 08:52:44] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 08:52:44] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:52:44] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 08:52:44] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 08:52:44] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 00:52:44 GMT]
[2020-10-22 08:52:44] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 09:07:30] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 09:07:31] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 09:07:31] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 09:07:31] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 09:07:31] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 09:07:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:07:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 09:07:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 09:07:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 09:07:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 09:07:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 09:07:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 09:07:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 09:07:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 09:07:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 09:07:33] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 09:07:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 09:07:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@49c17ba4
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 09:07:33] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 09:07:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 09:07:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 09:07:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:07:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 09:07:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:07:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 09:07:34] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 09:07:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 09:07:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@6f515cec
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2ec6ba3e
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@29d77199
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 09:07:38] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 09:07:48] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 09:07:48] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 09:07:48] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 09:07:48] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 09:07:48] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 09:07:48] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:07:48] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 09:07:48] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:07:48] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 01:07:48 GMT]
[2020-10-22 09:07:48] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 09:08:53] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 09:08:54] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 09:08:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 09:08:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 09:08:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 09:08:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 09:08:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 09:08:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 09:08:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 09:08:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 09:08:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 09:08:56] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 09:08:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 09:08:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@557a84fe
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 09:08:56] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 09:08:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 09:08:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 09:08:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:08:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 09:08:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:08:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 09:08:57] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 09:09:01] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 09:09:01] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@337db4bc
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7ee0161d
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1a162e59
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 09:09:01] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 09:09:08] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 09:09:08] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 09:09:08] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 09:09:08] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 09:09:08] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 09:09:08] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:09:08] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 09:09:08] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:09:08] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 01:09:08 GMT]
[2020-10-22 09:09:08] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 09:11:00] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 09:11:01] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 09:11:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 09:11:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 09:11:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 09:11:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 09:11:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 09:11:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 09:11:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 09:11:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 09:11:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 09:11:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 09:11:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 09:11:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@557a84fe
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 09:11:03] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 09:11:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 09:11:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 09:11:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:11:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 09:11:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:11:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 09:11:04] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 09:11:08] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 09:11:08] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7a506ecb
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4a381263
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6791d6fa
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 09:11:08] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 09:11:14] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 09:11:14] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 09:11:14] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 09:11:14] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 09:11:14] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 09:11:14] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:11:14] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 09:11:14] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:11:14] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 01:11:14 GMT]
[2020-10-22 09:11:14] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 09:18:25] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 09:18:26] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 09:18:26] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 09:18:26] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 09:18:26] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 09:18:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:18:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 09:18:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 09:18:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 09:18:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 09:18:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 09:18:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 09:18:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 09:18:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 09:18:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 09:18:28] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 09:18:28] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 09:18:28] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3ac3f6f
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 09:18:28] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 09:18:28] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 09:18:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 09:18:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:18:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 09:18:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:18:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 09:18:29] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 09:18:33] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 09:18:33] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7bd06f57
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3174cba
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1cc89955
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 09:18:33] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 09:18:40] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 09:18:40] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 09:18:40] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 09:18:40] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 09:18:40] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 09:18:40] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:18:40] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 09:18:40] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:18:40] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 01:18:40 GMT]
[2020-10-22 09:18:40] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 09:19:37] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 09:19:38] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 09:19:38] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 09:19:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 09:19:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 09:19:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 09:19:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 09:19:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 09:19:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 09:19:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 09:19:39] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 09:19:39] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 09:19:39] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 09:19:39] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@63cd2cd2
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 09:19:40] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 09:19:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 09:19:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 09:19:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:19:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 09:19:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:19:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 09:19:40] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 09:19:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 09:19:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@52e92172
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@626f54dd
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@37d3378
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 09:19:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 09:19:52] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 09:19:52] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 09:19:52] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 09:19:52] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 09:19:52] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 09:19:52] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:19:52] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 09:19:52] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:19:52] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 01:19:52 GMT]
[2020-10-22 09:19:52] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 09:35:26] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 09:35:27] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 09:35:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 09:35:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 09:35:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 09:35:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 09:35:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 09:35:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 09:35:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 09:35:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 09:35:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 09:35:28] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 09:35:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 09:35:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@43e065f2
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 09:35:29] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 09:35:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 09:35:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 09:35:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:35:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 09:35:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:35:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 09:35:29] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 09:41:10] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 09:41:11] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 09:41:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 09:41:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 09:41:12] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 09:41:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 09:41:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@49c17ba4
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 09:41:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 09:41:12] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 09:41:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 09:41:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 09:41:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 09:41:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 09:41:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 09:41:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 09:41:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 09:41:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 09:41:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 09:41:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 09:41:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 09:41:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 09:41:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 09:41:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:41:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 09:41:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:41:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 09:41:13] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 09:41:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 09:41:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2c74c6ba
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4c22214c
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6727f1a0
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 09:41:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 09:41:44] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 09:41:44] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 09:41:44] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 09:41:44] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 09:41:44] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 09:41:44] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:41:44] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 09:41:44] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:41:44] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 01:41:44 GMT]
[2020-10-22 09:41:44] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 09:44:31] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 09:44:31] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 09:44:31] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 09:44:31] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 09:44:31] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 09:44:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:44:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 09:44:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 09:44:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 09:44:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 09:44:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 09:44:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 09:44:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 09:44:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 09:44:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 09:44:33] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 09:44:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 09:44:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@49c17ba4
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 09:44:33] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 09:44:33] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 09:44:33] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 09:44:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:44:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 09:44:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:44:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 09:44:34] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 09:44:49] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 09:44:49] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@72caf8aa
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@53f170dc
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@41c441c0
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 09:44:49] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 09:44:57] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 09:44:57] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 09:44:57] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 09:44:57] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 09:44:57] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 09:44:57] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:44:57] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 09:44:57] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:44:57] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 01:44:57 GMT]
[2020-10-22 09:44:57] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 09:46:31] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 09:46:32] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 09:46:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 09:46:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 09:46:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 09:46:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 09:46:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 09:46:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 09:46:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 09:46:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 09:46:33] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 09:46:34] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 09:46:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 09:46:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5fe46d52
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 09:46:34] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 09:46:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 09:46:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 09:46:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:46:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 09:46:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:46:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 09:46:35] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 09:46:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 09:46:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@18dff3e5
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@28be1d20
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@65c20c10
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 09:46:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 09:46:45] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 09:46:45] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 09:46:45] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 09:46:45] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 09:46:45] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 09:46:45] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:46:45] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 09:46:45] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:46:45] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 01:46:45 GMT]
[2020-10-22 09:46:45] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 09:56:54] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-22 09:56:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-22 09:56:54] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-22 09:57:00] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 09:57:01] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 09:57:01] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 09:57:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 09:57:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 09:57:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 09:57:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 09:57:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 09:57:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 09:57:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 09:57:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 09:57:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 09:57:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 09:57:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@b112b13
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 09:57:03] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 09:57:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 09:57:03] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 09:57:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:57:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 09:57:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 09:57:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 09:57:04] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 09:57:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 09:57:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@51f2fced
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5165eb99
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@58419ca5
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 09:57:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 09:57:17] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 09:57:17] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 09:57:17] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 09:57:17] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 09:57:17] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 09:57:17] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:57:17] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 09:57:17] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 09:57:17] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 01:57:17 GMT]
[2020-10-22 09:57:17] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 10:02:26] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 10:02:27] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 10:02:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 10:02:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 10:02:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 10:02:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 10:02:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 10:02:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 10:02:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 10:02:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 10:02:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 10:02:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 10:02:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 10:02:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4a37191a
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 10:02:29] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 10:02:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 10:02:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 10:02:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:02:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 10:02:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:02:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 10:02:30] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 10:02:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 10:02:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@31e783cd
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@56eb9f9d
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@75f35ab6
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 10:02:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 10:02:42] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 10:02:42] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 10:02:42] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 10:02:42] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 10:02:42] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 10:02:42] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:02:42] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 10:02:42] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:02:42] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 02:02:42 GMT]
[2020-10-22 10:02:42] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 10:04:49] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 10:04:50] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 10:04:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 10:04:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 10:04:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 10:04:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 10:04:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 10:04:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 10:04:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 10:04:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 10:04:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 10:04:51] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 10:04:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 10:04:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@b112b13
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 10:04:52] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 10:04:52] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 10:04:52] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 10:04:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:04:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 10:04:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:04:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 10:04:52] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 10:05:12] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 10:05:12] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@52e92172
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@626f54dd
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@37d3378
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 10:05:12] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 10:05:18] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 10:05:18] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 10:05:18] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 10:05:18] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 10:05:18] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 10:05:18] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:05:18] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 10:05:18] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:05:18] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 02:05:18 GMT]
[2020-10-22 10:05:18] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 10:06:23] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 10:06:24] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 10:06:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 10:06:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 10:06:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 10:06:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 10:06:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 10:06:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 10:06:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 10:06:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 10:06:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 10:06:26] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 10:06:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 10:06:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7a3e5cd3
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 10:06:26] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 10:06:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 10:06:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 10:06:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:06:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 10:06:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:06:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 10:06:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 10:06:34] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 10:06:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3d66e885
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5b399b69
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@715aaaf6
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 10:06:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 10:06:41] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 10:06:41] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 10:06:41] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 10:06:41] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 10:06:41] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 10:06:41] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:06:41] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 10:06:41] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:06:41] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 02:06:41 GMT]
[2020-10-22 10:06:41] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 10:13:10] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 10:13:11] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 10:13:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 10:13:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 10:13:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 10:13:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 10:13:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 10:13:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 10:13:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 10:13:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 10:13:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 10:13:13] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 10:13:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 10:13:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@49c17ba4
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 10:13:13] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 10:13:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 10:13:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 10:13:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:13:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 10:13:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:13:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 10:13:14] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 10:13:19] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 10:13:19] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@1c0180c2
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@19021a7d
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@507ad6be
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 10:13:19] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 10:13:26] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 10:13:26] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 10:13:26] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 10:13:26] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 10:13:26] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 10:13:26] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:13:26] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 10:13:26] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:13:26] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 02:13:26 GMT]
[2020-10-22 10:13:26] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 10:16:20] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 10:16:21] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 10:16:21] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 10:16:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 10:16:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 10:16:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 10:16:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 10:16:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 10:16:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 10:16:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 10:16:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 10:16:23] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 10:16:23] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 10:16:23] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@45e140ae
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 10:16:23] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 10:16:24] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 10:16:24] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 10:16:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 10:16:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:16:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 10:16:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:16:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 10:16:24] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 10:16:40] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 10:16:40] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@839d0aa
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@58611c97
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1acaa8d0
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 10:16:40] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 10:16:46] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 10:16:46] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 10:16:46] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 10:16:46] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 10:16:46] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 10:16:46] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:16:46] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 10:16:46] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:16:46] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 02:16:46 GMT]
[2020-10-22 10:16:46] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 10:26:49] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-22 10:26:49] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-22 10:26:49] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-22 10:26:54] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 10:26:55] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 10:26:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 10:26:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 10:26:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 10:26:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 10:26:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 10:26:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 10:26:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 10:26:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 10:26:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 10:26:57] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 10:26:57] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 10:26:57] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@63cd2cd2
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 10:26:57] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 10:26:57] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 10:26:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 10:26:57] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:26:57] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 10:26:57] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:26:57] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 10:26:58] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 10:27:02] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 10:27:03] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@76df924b
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@688054e
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@200517bb
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 10:27:03] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 10:27:09] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 10:27:09] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 10:27:09] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 10:27:09] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 10:27:09] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 10:27:09] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:27:09] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 10:27:09] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:27:09] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 02:27:09 GMT]
[2020-10-22 10:27:09] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 10:27:37] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 10:27:38] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 10:27:38] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 10:27:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 10:27:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 10:27:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 10:27:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 10:27:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 10:27:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 10:27:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 10:27:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 10:27:40] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 10:27:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 10:27:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@63cd2cd2
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 10:27:40] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 10:27:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 10:27:40] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 10:27:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:27:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 10:27:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:27:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 10:27:41] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 10:27:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 10:27:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@72a55fdb
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@603f2b5
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2ac58197
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 10:27:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 10:27:55] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 10:27:55] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 10:27:55] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 10:27:55] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 10:27:55] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 10:27:55] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:27:55] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 10:27:55] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:27:55] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 02:27:55 GMT]
[2020-10-22 10:27:55] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 10:40:03] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 10:40:04] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 10:40:04] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 10:40:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 10:40:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 10:40:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 10:40:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 10:40:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 10:40:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 10:40:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 10:40:05] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 10:40:06] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 10:40:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 10:40:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5a02bfe3
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 10:40:06] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 10:40:06] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 10:40:06] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 10:40:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:40:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 10:40:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:40:06] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 10:40:07] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 10:40:12] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 10:40:12] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@52e92172
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@626f54dd
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@37d3378
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 10:40:12] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 10:40:19] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 10:40:19] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 10:40:19] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 10:40:19] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 10:40:19] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 10:40:19] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:40:19] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 10:40:19] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:40:19] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 02:40:19 GMT]
[2020-10-22 10:40:19] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 10:50:13] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 10:50:14] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 10:50:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 10:50:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 10:50:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 10:50:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 10:50:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 10:50:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 10:50:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 10:50:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 10:50:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 10:50:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 10:50:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 10:50:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2b79c8ff
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 10:50:16] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 10:50:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 10:50:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 10:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 10:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 10:50:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 10:50:17] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 10:50:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 10:50:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@65aefbb8
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@72c0e372
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@50bf1aa0
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 10:50:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 10:51:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 10:51:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 10:51:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 10:51:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 10:51:50] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 10:51:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:51:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 10:51:50] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 02:51:50 GMT]
[2020-10-22 10:51:50] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 11:24:37] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-22 11:24:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-22 11:24:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-22 11:24:42] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 11:24:43] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 11:24:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 11:24:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 11:24:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 11:24:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 11:24:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 11:24:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 11:24:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 11:24:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 11:24:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 11:24:45] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 11:24:45] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 11:24:45] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3ac3f6f
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 11:24:45] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 11:24:45] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 11:24:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 11:24:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:24:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 11:24:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:24:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 11:24:46] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 11:25:08] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 11:25:08] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@57e8ad5c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6a365e0c
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7269d14b
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 11:25:08] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 11:25:14] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 11:25:14] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 11:25:14] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 11:25:14] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 11:25:14] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 11:25:14] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:25:14] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 11:25:14] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:25:14] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 03:25:14 GMT]
[2020-10-22 11:25:14] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 11:28:27] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 11:28:28] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 11:28:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 11:28:29] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 11:28:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 11:28:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 11:28:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@24eb65e3
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 11:28:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 11:28:29] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 11:28:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 11:28:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 11:28:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 11:28:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 11:28:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 11:28:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 11:28:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 11:28:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 11:28:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 11:28:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 11:28:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 11:28:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 11:28:30] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 11:28:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:28:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 11:28:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:28:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 11:28:30] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 11:29:34] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 11:29:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@20e0b6b6
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@17b3acea
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6e730151
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 11:29:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 11:29:45] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 11:29:45] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 11:29:45] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 11:29:45] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 11:29:45] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 11:29:45] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:29:45] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 11:29:45] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:29:45] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 03:29:45 GMT]
[2020-10-22 11:29:45] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 11:38:58] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 11:38:59] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 11:38:59] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 11:39:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 11:39:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 11:39:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 11:39:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 11:39:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 11:39:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 11:39:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 11:39:00] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 11:39:01] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 11:39:01] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 11:39:01] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@791c12e3
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 11:39:01] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 11:39:01] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 11:39:01] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 11:39:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:39:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 11:39:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:39:01] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 11:39:02] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 11:39:06] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 11:39:06] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5549b413
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7e6eb36a
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@c493843
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 11:39:06] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 11:39:16] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 11:39:16] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 11:39:16] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 11:39:16] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 11:39:16] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 11:39:16] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:39:16] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 11:39:16] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:39:16] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 03:39:16 GMT]
[2020-10-22 11:39:16] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 11:40:14] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 11:40:14] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 11:40:14] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 11:40:14] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 11:40:14] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 11:40:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:40:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 11:40:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 11:40:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 11:40:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 11:40:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 11:40:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 11:40:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 11:40:14] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 11:40:15] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 11:40:16] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 11:40:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 11:40:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@d5556bf
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 11:40:16] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 11:40:16] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 11:40:16] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 11:40:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:40:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 11:40:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:40:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 11:40:17] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 11:40:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 11:40:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@32cc12c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2c335a13
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@15da1339
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 11:40:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 11:40:27] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 11:40:27] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 11:40:27] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 11:40:27] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 11:40:27] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 11:40:27] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:40:27] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 11:40:27] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:40:27] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 03:40:27 GMT]
[2020-10-22 11:40:27] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 11:43:15] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 11:43:16] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 11:43:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 11:43:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 11:43:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 11:43:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 11:43:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 11:43:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 11:43:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 11:43:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 11:43:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 11:43:18] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 11:43:18] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 11:43:18] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@d5556bf
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 11:43:18] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 11:43:18] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 11:43:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 11:43:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:43:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 11:43:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:43:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 11:43:19] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 11:43:45] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 11:43:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@26c71dff
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@16eba7cd
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@77a460ce
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 11:43:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 11:44:02] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 11:44:02] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 11:44:02] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 11:44:02] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 11:44:02] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 11:44:02] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:44:02] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 11:44:02] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:44:02] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 03:44:02 GMT]
[2020-10-22 11:44:02] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 11:47:49] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 11:47:49] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 11:47:49] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 11:47:49] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 11:47:49] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 11:47:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:47:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 11:47:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 11:47:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 11:47:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 11:47:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 11:47:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 11:47:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 11:47:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 11:47:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 11:47:51] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 11:47:51] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 11:47:51] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4a37191a
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 11:47:51] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 11:47:51] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 11:47:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 11:47:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:47:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 11:47:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:47:52] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 11:47:52] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 11:48:00] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 11:48:00] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7ac6379
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4bde8962
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@12536315
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 11:48:00] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 11:48:10] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 11:48:10] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 11:48:10] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 11:48:10] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 11:48:10] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 11:48:10] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:48:10] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 11:48:10] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:48:10] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 03:48:10 GMT]
[2020-10-22 11:48:10] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 11:49:23] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 11:49:24] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 11:49:24] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 11:49:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 11:49:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 11:49:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 11:49:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 11:49:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 11:49:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 11:49:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 11:49:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 11:49:26] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 11:49:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 11:49:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@24eb65e3
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 11:49:26] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 11:49:26] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 11:49:26] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 11:49:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:49:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 11:49:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:49:26] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 11:49:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 11:49:36] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 11:49:36] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@e55ee3c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3e0d6099
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@71f6682a
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 11:49:36] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 11:49:43] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 11:49:43] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 11:49:43] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 11:49:43] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 11:49:43] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 11:49:43] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:49:43] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 11:49:43] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:49:43] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 03:49:43 GMT]
[2020-10-22 11:49:43] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 11:53:54] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 11:53:55] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 11:53:55] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 11:53:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 11:53:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 11:53:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 11:53:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 11:53:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 11:53:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 11:53:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 11:53:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 11:53:57] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 11:53:57] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 11:53:57] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@d5556bf
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 11:53:57] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 11:53:57] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 11:53:57] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 11:53:57] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:53:57] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 11:53:57] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:53:57] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 11:53:58] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 11:54:11] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 11:54:11] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@50dccb12
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6a30425f
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@b5ac081
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 11:54:11] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 11:54:21] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 11:54:21] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 11:54:21] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 11:54:21] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 11:54:21] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 11:54:21] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:54:21] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 11:54:21] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:54:21] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 03:54:21 GMT]
[2020-10-22 11:54:21] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 11:55:18] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 11:55:19] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 11:55:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 11:55:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 11:55:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 11:55:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 11:55:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 11:55:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 11:55:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 11:55:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 11:55:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 11:55:21] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 11:55:21] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 11:55:21] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5854a18
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 11:55:21] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 11:55:21] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 11:55:21] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 11:55:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:55:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 11:55:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:55:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 11:55:22] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 11:56:22] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 11:56:23] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 11:56:23] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 11:56:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 11:56:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 11:56:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 11:56:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 11:56:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 11:56:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 11:56:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 11:56:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 11:56:25] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 11:56:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 11:56:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1abebef3
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 11:56:25] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 11:56:25] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 11:56:25] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 11:56:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:56:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 11:56:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 11:56:25] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 11:56:26] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 11:56:36] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 11:56:36] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@238bb4c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4c3edd13
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3eabf40c
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 11:56:36] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 11:56:42] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 11:56:42] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 11:56:42] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 11:56:42] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 11:56:42] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 11:56:42] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:56:42] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 11:56:42] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 11:56:42] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 03:56:42 GMT]
[2020-10-22 11:56:42] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 12:03:44] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 12:03:45] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 12:03:45] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 12:03:45] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 12:03:45] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 12:03:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 12:03:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 12:03:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 12:03:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 12:03:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 12:03:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 12:03:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 12:03:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 12:03:45] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 12:03:46] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 12:03:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 12:03:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 12:03:47] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 12:03:47] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 12:03:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 12:03:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2776fd8f
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 12:03:48] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 12:03:48] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 12:03:48] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 12:03:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 12:03:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 12:03:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 12:03:48] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 12:03:48] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 12:03:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 12:03:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@6db64c87
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2cd1e933
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1ab20685
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 12:03:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 12:04:01] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 12:04:01] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 12:04:01] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 12:04:01] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 12:04:01] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 12:04:01] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 12:04:01] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 12:04:01] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 12:04:01] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 04:04:01 GMT]
[2020-10-22 12:04:01] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 12:10:11] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-22 12:10:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-22 12:10:11] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-22 12:10:18] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 12:10:19] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 12:10:19] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 12:10:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 12:10:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 12:10:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 12:10:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 12:10:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 12:10:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 12:10:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 12:10:21] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 12:10:22] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 12:10:22] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 12:10:22] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1a0d96a5
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 12:10:22] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 12:10:22] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 12:10:22] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 12:10:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 12:10:22] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 12:10:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 12:10:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 12:10:23] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 12:10:29] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 12:10:29] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@78bed874
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@61c8a178
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@24c0bf2c
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 12:10:29] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 12:10:35] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 12:10:35] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 12:10:35] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 12:10:35] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 12:10:35] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 12:10:35] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 12:10:35] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 12:10:35] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 12:10:35] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 04:10:35 GMT]
[2020-10-22 12:10:35] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 12:12:21] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 12:12:22] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 12:12:22] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 12:12:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 12:12:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 12:12:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 12:12:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 12:12:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 12:12:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 12:12:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 12:12:23] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 12:12:24] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 12:12:24] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 12:12:24] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@d5556bf
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 12:12:24] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 12:12:24] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 12:12:24] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 12:12:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 12:12:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 12:12:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 12:12:24] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 12:12:25] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 12:12:29] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 12:12:29] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5549b413
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7e6eb36a
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@c493843
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 12:12:29] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 12:12:36] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 12:12:36] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 12:12:36] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 12:12:36] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 12:12:36] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 12:12:36] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 12:12:36] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 12:12:36] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 12:12:36] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 04:12:36 GMT]
[2020-10-22 12:12:36] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 13:52:38] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 13:52:39] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 13:52:39] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 13:52:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 13:52:40] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 13:52:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 13:52:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4a37191a
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 13:52:40] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 13:52:40] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 13:52:40] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 13:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 13:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 13:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 13:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 13:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 13:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 13:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 13:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 13:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 13:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 13:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 13:52:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 13:52:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 13:52:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 13:52:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 13:52:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 13:52:41] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 13:52:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 13:52:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7bd06f57
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3174cba
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1cc89955
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 13:52:46] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 13:52:57] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 13:52:57] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 13:52:57] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 13:52:57] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 13:52:57] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 13:52:57] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 13:52:57] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 13:52:57] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 13:52:57] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 05:52:57 GMT]
[2020-10-22 13:52:57] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 13:55:25] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 13:55:26] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 13:55:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 13:55:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 13:55:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 13:55:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 13:55:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 13:55:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 13:55:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 13:55:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 13:55:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 13:55:27] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 13:55:28] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 13:55:28] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@b112b13
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 13:55:28] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 13:55:28] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 13:55:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 13:55:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 13:55:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 13:55:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 13:55:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 13:55:28] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 13:55:34] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 13:55:34] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@46fcb274
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@487b259c
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7029c142
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 13:55:34] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 13:55:41] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 13:55:41] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 13:55:41] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 13:55:41] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 13:55:41] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 13:55:41] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 13:55:41] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 13:55:41] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 13:55:41] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 05:55:41 GMT]
[2020-10-22 13:55:41] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 14:12:30] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 14:12:31] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 14:12:31] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 14:12:31] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 14:12:31] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 14:12:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 14:12:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 14:12:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 14:12:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 14:12:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 14:12:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 14:12:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 14:12:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 14:12:31] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 14:12:32] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 14:12:34] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 14:12:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 14:12:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@433c6abb
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 14:12:34] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 14:12:34] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 14:12:34] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 14:12:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 14:12:34] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 14:12:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 14:12:35] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 14:12:35] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 14:12:42] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 14:12:43] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 14:12:43] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 14:12:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 14:12:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 14:12:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 14:12:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 14:12:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 14:12:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 14:12:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 14:12:44] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 14:12:45] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 14:12:45] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 14:12:45] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6504a875
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 14:12:45] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 14:12:45] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 14:12:45] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 14:12:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 14:12:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 14:12:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 14:12:45] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 14:12:46] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 14:13:24] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 14:13:24] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@9c7e689
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@694537d8
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@166e7aec
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 14:13:24] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 14:13:31] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 14:13:31] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 14:13:31] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 14:13:31] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 14:13:31] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 14:13:31] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 14:13:31] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 14:13:31] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 14:13:31] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 06:13:31 GMT]
[2020-10-22 14:13:31] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 14:16:01] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 14:16:02] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 14:16:02] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 14:16:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 14:16:03] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 14:16:03] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 14:16:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 14:16:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@672a1c62
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 14:16:03] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 14:16:03] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 14:16:03] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 14:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 14:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 14:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 14:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 14:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 14:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 14:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 14:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 14:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 14:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 14:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 14:16:04] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 14:16:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 14:16:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 14:16:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 14:16:04] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 14:16:04] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 14:16:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 14:16:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2f36d615
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2fa01aab
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3aa53311
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 14:16:09] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 14:16:15] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 14:16:15] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 14:16:15] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 14:16:15] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 14:16:15] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 14:16:15] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 14:16:15] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 14:16:15] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 14:16:15] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 06:16:15 GMT]
[2020-10-22 14:16:15] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 14:17:34] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 14:17:35] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 14:17:35] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 14:17:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 14:17:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 14:17:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 14:17:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 14:17:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 14:17:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 14:17:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 14:17:36] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 14:17:37] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 14:17:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 14:17:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6504a875
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 14:17:37] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 14:17:37] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 14:17:37] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 14:17:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 14:17:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 14:17:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 14:17:37] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 14:17:38] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 14:34:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 14:34:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@19679484
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@590e6ef7
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@495d11c9
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 14:34:21] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 14:34:33] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 14:34:33] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 14:34:33] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 14:34:33] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 14:34:33] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 14:34:33] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 14:34:33] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 14:34:33] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 14:34:33] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 06:34:33 GMT]
[2020-10-22 14:34:33] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 14:58:25] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 14:58:26] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 14:58:26] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 14:58:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 14:58:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 14:58:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 14:58:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 14:58:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 14:58:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 14:58:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 14:58:27] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 14:58:28] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 14:58:28] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 14:58:28] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7c0df4ab
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 14:58:28] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 14:58:28] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 14:58:28] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 14:58:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 14:58:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 14:58:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 14:58:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 14:58:29] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 14:58:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 14:58:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@27304cda
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5ffa02ad
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1880cdd9
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 14:58:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 14:58:49] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 14:58:49] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 14:58:49] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 14:58:49] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 14:58:49] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 14:58:49] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 14:58:49] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 14:58:49] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 14:58:49] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 06:58:49 GMT]
[2020-10-22 14:58:49] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 15:02:30] -- [DEBUG]: [io.lettuce.core.RedisClient] -- Initiate shutdown (100, 100, MILLISECONDS)
[2020-10-22 15:02:30] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-22 15:02:30] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Initiate shutdown (0, 2, SECONDS)
[2020-10-22 15:02:38] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 15:02:39] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 15:02:39] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 15:02:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 15:02:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 15:02:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 15:02:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 15:02:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 15:02:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 15:02:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 15:02:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 15:02:41] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 15:02:41] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 15:02:41] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@61ecbee9
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 15:02:41] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 15:02:41] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 15:02:41] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 15:02:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 15:02:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 15:02:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 15:02:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 15:02:42] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 15:02:48] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 15:02:48] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2de2421b
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6c7d868f
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3ff79c97
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 15:02:48] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 15:02:59] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 15:02:59] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 15:02:59] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 15:02:59] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 15:02:59] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 15:02:59] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 15:02:59] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 15:02:59] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 15:02:59] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 07:02:59 GMT]
[2020-10-22 15:02:59] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 16:11:10] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 16:11:10] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 16:11:10] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 16:11:10] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 16:11:10] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 16:11:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 16:11:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 16:11:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 16:11:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 16:11:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 16:11:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 16:11:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 16:11:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 16:11:10] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 16:11:11] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 16:11:12] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 16:11:12] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 16:11:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 16:11:12] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@630b6190
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 16:11:12] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 16:11:12] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 16:11:13] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 16:11:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 16:11:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 16:11:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 16:11:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 16:11:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 16:11:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 16:11:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 16:11:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 16:11:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 16:11:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 16:11:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 16:11:13] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 16:11:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 16:11:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 16:11:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 16:11:13] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 16:11:13] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 16:11:43] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 16:11:44] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@19281165
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4feb8151
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5801792c
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 16:11:44] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 16:11:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 16:11:50] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 16:11:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 16:11:50] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 16:11:50] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 16:11:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 16:11:50] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 16:11:50] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 16:11:50] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 08:11:50 GMT]
[2020-10-22 16:11:50] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 16:13:53] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 16:13:54] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 16:13:54] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 16:13:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 16:13:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 16:13:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 16:13:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 16:13:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 16:13:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 16:13:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 16:13:55] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 16:13:56] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 16:13:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 16:13:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5922d3e9
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 16:13:56] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 16:13:56] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 16:13:56] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 16:13:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 16:13:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 16:13:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 16:13:56] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 16:13:57] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 16:14:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 16:14:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2f0c911a
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1ca8db3b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@353890fd
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 16:14:27] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 16:14:35] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 16:14:35] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 16:14:35] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 16:14:35] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 16:14:35] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 16:14:35] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 16:14:35] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 16:14:35] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 16:14:35] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 08:14:35 GMT]
[2020-10-22 16:14:35] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 16:17:17] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 16:17:17] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 16:17:18] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 16:17:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 16:17:19] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 16:17:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 16:17:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7d57dbb5
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 16:17:19] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 16:17:19] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 16:17:19] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 16:17:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 16:17:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 16:17:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 16:17:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 16:17:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 16:17:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 16:17:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 16:17:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 16:17:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 16:17:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 16:17:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 16:17:20] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 16:17:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 16:17:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 16:17:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 16:17:20] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 16:17:20] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 16:17:51] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 16:17:51] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@24eae949
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@17439d52
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5f7e6993
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 16:17:51] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 16:17:57] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 16:17:57] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 16:17:57] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 16:17:57] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 16:17:57] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 16:17:57] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 16:17:57] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 16:17:57] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 16:17:57] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 08:17:57 GMT]
[2020-10-22 16:17:57] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 16:20:15] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 16:20:16] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 16:20:16] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 16:20:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 16:20:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 16:20:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 16:20:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 16:20:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 16:20:17] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 16:20:17] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 16:20:17] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 16:20:17] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 16:20:17] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 16:20:17] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 16:20:17] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 16:20:17] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 16:20:17] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 16:20:17] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@630b6190
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 16:20:18] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 16:20:18] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 16:20:18] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 16:20:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 16:20:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 16:20:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 16:20:18] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 16:20:18] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 16:20:35] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 16:20:36] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7efd7e69
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3b822c43
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2cb807d6
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 16:20:36] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 16:20:42] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 16:20:42] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 16:20:42] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 16:20:42] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 16:20:42] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 16:20:42] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 16:20:42] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 16:20:42] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 16:20:42] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 08:20:42 GMT]
[2020-10-22 16:20:42] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 16:23:27] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 16:23:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 16:23:27] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 16:23:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 16:23:27] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 16:23:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 16:23:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 16:23:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 16:23:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 16:23:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 16:23:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 16:23:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 16:23:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 16:23:27] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 16:23:28] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 16:23:29] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 16:23:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 16:23:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@672a1c62
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 16:23:29] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 16:23:29] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 16:23:29] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 16:23:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 16:23:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 16:23:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 16:23:30] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 16:23:30] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 16:24:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 16:24:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@42c3ca8d
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@35298a70
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@466bdec1
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 16:24:17] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 16:24:27] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 16:24:27] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 16:24:27] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 16:24:27] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 16:24:27] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 16:24:27] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 16:24:27] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 16:24:27] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 16:24:27] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 08:24:27 GMT]
[2020-10-22 16:24:27] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
[2020-10-22 17:04:48] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 17:04:49] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 17:04:49] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 17:04:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 17:04:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 17:04:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 17:04:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 17:04:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 17:04:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 17:04:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 17:04:50] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 17:04:51] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 17:04:51] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 17:04:51] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5f2de715
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 17:04:51] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 17:04:51] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 17:04:51] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 17:04:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 17:04:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 17:04:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 17:04:51] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 17:04:52] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 17:04:52] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 17:04:52] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4f815ba
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@296041da
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@67b3714d
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 17:04:52] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 17:05:39] -- [DEBUG]: [cn.besbing.ServerApplication] -- Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Searching for mappers annotated with @Mapper
[2020-10-22 17:05:40] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing'
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- Using auto-configuration base package 'cn.besbing.wechat'
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\slave\SlaveCustom.class]
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\third\ThirdCustom.class]
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'primaryCustom' and 'cn.besbing.model.mapper.primary.PrimaryCustom' mapperInterface
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'primaryCustom'.
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'slaveCustom' and 'cn.besbing.model.mapper.slave.SlaveCustom' mapperInterface
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'slaveCustom'.
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'thirdCustom' and 'cn.besbing.model.mapper.third.ThirdCustom' mapperInterface
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Enabling autowire by type for MapperFactoryBean with name 'thirdCustom'.
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlPermissionMapper.class]
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRoleMapper.class]
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlRolePermissionMapper.class]
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DlUserRoleMapper.class]
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\DualMapper.class]
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\PrimaryCustom.class]
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Identified candidate component class: file [E:\dataloadercloud3\model\target\classes\cn\besbing\model\mapper\primary\SmUserMapper.class]
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlPermissionMapper' and 'cn.besbing.model.mapper.primary.DlPermissionMapper' mapperInterface
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRoleMapper' and 'cn.besbing.model.mapper.primary.DlRoleMapper' mapperInterface
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlRolePermissionMapper' and 'cn.besbing.model.mapper.primary.DlRolePermissionMapper' mapperInterface
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dlUserRoleMapper' and 'cn.besbing.model.mapper.primary.DlUserRoleMapper' mapperInterface
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'dualMapper' and 'cn.besbing.model.mapper.primary.DualMapper' mapperInterface
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.mapper.ClassPathMapperScanner] -- Creating MapperFactoryBean with name 'smUserMapper' and 'cn.besbing.model.mapper.primary.SmUserMapper' mapperInterface
[2020-10-22 17:05:40] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed configuration file: 'class path resource [mybatis-config.xml]'
[2020-10-22 17:05:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlPermissionMapper.xml]'
[2020-10-22 17:05:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRoleMapper.xml]'
[2020-10-22 17:05:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlRolePermissionMapper.xml]'
[2020-10-22 17:05:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DlUserRoleMapper.xml]'
[2020-10-22 17:05:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\DualMapper.xml]'
[2020-10-22 17:05:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\PrimaryCustomerMapper.xml]'
[2020-10-22 17:05:41] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\primary\SmUserMapper.xml]'
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Creating Shiro Filter instance.
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/static/**] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/static/**] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/action/login] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/action/login] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/test/**] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/test/**] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/forgetPass] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/forgetPass] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPwd] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPwd] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/resetPass] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/resetPass] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/report] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/report] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/confirmPassword] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/confirmPassword] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/validurl] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/validurl] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/taskProcess] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/taskProcess] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/AllTaskProgess] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/AllTaskProgess] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getParameters] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getParameters] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/upLoadParameters] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/upLoadParameters] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllUserFromLims] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllUserFromLims] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/downloadImage] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/downloadImage] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/curtail] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/curtail] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/getAllTaskUnDownload] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/getAllTaskUnDownload] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/logout] from String definition [logout]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/logout] to filter [logout] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/itf/**] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/itf/**] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/login] from String definition [anon]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/login] to filter [anon] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Creating chain [/**] from String definition [authc]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.web.filter.mgt.DefaultFilterChainManager] -- Attempting to apply path [/**] to filter [authc] with config [null]
[2020-10-22 17:05:41] -- [DEBUG]: [org.apache.shiro.spring.web.ShiroFilterFactoryBean] -- Found filter chain candidate filter 'characterEncodingFilter'
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.logging.InternalLoggerFactory] -- Using SLF4J as the default logging framework
[2020-10-22 17:05:42] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- -Dio.netty.eventLoopThreads: 4
[2020-10-22 17:05:42] -- [DEBUG]: [io.lettuce.core.resource.DefaultEventLoopGroupProvider] -- Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.InternalThreadLocalMap] -- -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.level: simple
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.ResourceLeakDetector] -- -Dio.netty.leakDetection.targetRecords: 4
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.ResourceLeakDetectorFactory] -- Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1cdc1bbc
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- Platform: Windows
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- -Dio.netty.noUnsafe: false
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- Java version: 8
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.theUnsafe: available
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- sun.misc.Unsafe.copyMemory: available
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Buffer.address: available
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- direct buffer constructor: available
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.Bits.unaligned: available, true
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent0] -- java.nio.DirectByteBuffer.<init>(long, int): available
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- sun.misc.Unsafe: available
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.tmpdir: C:\Users\ADMINI~1\AppData\Local\Temp (java.io.tmpdir)
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.maxDirectMemory: 1903689728 bytes
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.CleanerJava6] -- java.nio.ByteBuffer.cleaner(): available
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- -Dio.netty.noPreferDirect: false
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.util.internal.PlatformDependent] -- org.jctools-core.MpscChunkedArrayQueue: available
[2020-10-22 17:05:42] -- [DEBUG]: [reactor.util.Loggers$LoggerFactory] -- Using Slf4j logging framework
[2020-10-22 17:05:42] -- [DEBUG]: [io.lettuce.core.resource.DefaultClientResources] -- LatencyUtils/HdrUtils are not available, metrics are disabled
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numHeapArenas: 8
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.numDirectArenas: 8
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.pageSize: 8192
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxOrder: 11
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.chunkSize: 16777216
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.smallCacheSize: 256
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.normalCacheSize: 64
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimInterval: 8192
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.useCacheForAllThreads: true
[2020-10-22 17:05:42] -- [DEBUG]: [io.netty.buffer.PooledByteBufAllocator] -- -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[2020-10-22 17:05:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 17:05:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\slave\SlaveCustomerMapper.xml]'
[2020-10-22 17:05:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
[2020-10-22 17:05:42] -- [DEBUG]: [org.mybatis.spring.SqlSessionFactoryBean] -- Parsed mapper file: 'file [E:\dataloadercloud3\model\target\classes\mappers\third\ThirdCustomerMapper.xml]'
[2020-10-22 17:05:42] -- [DEBUG]: [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration] -- No org.mybatis.spring.mapper.MapperFactoryBean found.
[2020-10-22 17:05:45] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2020-10-22 17:05:45] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3cb8389f
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2b7594e1
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3d445023
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2020-10-22 17:05:45] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2020-10-22 17:06:05] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- Looked up AuthenticationInfo [沈洋] from doGetAuthenticationInfo
[2020-10-22 17:06:05] -- [DEBUG]: [org.apache.shiro.realm.AuthenticatingRealm] -- AuthenticationInfo caching is disabled for info [沈洋].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].
[2020-10-22 17:06:05] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[2020-10-22 17:06:05] -- [DEBUG]: [org.apache.shiro.authc.credential.SimpleCredentialsMatcher] -- Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[2020-10-22 17:06:05] -- [DEBUG]: [org.apache.shiro.authc.AbstractAuthenticator] -- Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - 1002437, rememberMe=false].  Returned account [沈洋]
[2020-10-22 17:06:05] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 17:06:05] -- [DEBUG]: [org.apache.shiro.mgt.DefaultSecurityManager] -- Context already contains a session.  Returning.
[2020-10-22 17:06:05] -- [DEBUG]: [org.apache.shiro.subject.support.DefaultSubjectContext] -- No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[2020-10-22 17:06:05] -- [DEBUG]: [org.apache.shiro.web.servlet.SimpleCookie] -- Added HttpServletResponse Cookie [rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Wed, 21-Oct-2020 09:06:05 GMT]
[2020-10-22 17:06:05] -- [DEBUG]: [org.apache.shiro.mgt.AbstractRememberMeManager] -- AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account.
